#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2028871770198805139) {
   out_2028871770198805139[0] = 0;
   out_2028871770198805139[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2028871770198805139[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2028871770198805139[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2028871770198805139[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2028871770198805139[5] = -sin(in_vec[1]);
   out_2028871770198805139[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2028871770198805139[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2028871770198805139[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2028871770198805139[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2028871770198805139[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2028871770198805139[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2028871770198805139[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2028871770198805139[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2028871770198805139[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2028871770198805139[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2028871770198805139[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2028871770198805139[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8151007758379062661) {
   out_8151007758379062661[0] = delta_x[0] + nom_x[0];
   out_8151007758379062661[1] = delta_x[1] + nom_x[1];
   out_8151007758379062661[2] = delta_x[2] + nom_x[2];
   out_8151007758379062661[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8151007758379062661[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8151007758379062661[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8151007758379062661[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8151007758379062661[7] = delta_x[6] + nom_x[7];
   out_8151007758379062661[8] = delta_x[7] + nom_x[8];
   out_8151007758379062661[9] = delta_x[8] + nom_x[9];
   out_8151007758379062661[10] = delta_x[9] + nom_x[10];
   out_8151007758379062661[11] = delta_x[10] + nom_x[11];
   out_8151007758379062661[12] = delta_x[11] + nom_x[12];
   out_8151007758379062661[13] = delta_x[12] + nom_x[13];
   out_8151007758379062661[14] = delta_x[13] + nom_x[14];
   out_8151007758379062661[15] = delta_x[14] + nom_x[15];
   out_8151007758379062661[16] = delta_x[15] + nom_x[16];
   out_8151007758379062661[17] = delta_x[16] + nom_x[17];
   out_8151007758379062661[18] = delta_x[17] + nom_x[18];
   out_8151007758379062661[19] = delta_x[18] + nom_x[19];
   out_8151007758379062661[20] = delta_x[19] + nom_x[20];
   out_8151007758379062661[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2128743399615825523) {
   out_2128743399615825523[0] = -nom_x[0] + true_x[0];
   out_2128743399615825523[1] = -nom_x[1] + true_x[1];
   out_2128743399615825523[2] = -nom_x[2] + true_x[2];
   out_2128743399615825523[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2128743399615825523[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2128743399615825523[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2128743399615825523[6] = -nom_x[7] + true_x[7];
   out_2128743399615825523[7] = -nom_x[8] + true_x[8];
   out_2128743399615825523[8] = -nom_x[9] + true_x[9];
   out_2128743399615825523[9] = -nom_x[10] + true_x[10];
   out_2128743399615825523[10] = -nom_x[11] + true_x[11];
   out_2128743399615825523[11] = -nom_x[12] + true_x[12];
   out_2128743399615825523[12] = -nom_x[13] + true_x[13];
   out_2128743399615825523[13] = -nom_x[14] + true_x[14];
   out_2128743399615825523[14] = -nom_x[15] + true_x[15];
   out_2128743399615825523[15] = -nom_x[16] + true_x[16];
   out_2128743399615825523[16] = -nom_x[17] + true_x[17];
   out_2128743399615825523[17] = -nom_x[18] + true_x[18];
   out_2128743399615825523[18] = -nom_x[19] + true_x[19];
   out_2128743399615825523[19] = -nom_x[20] + true_x[20];
   out_2128743399615825523[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6416191868946148009) {
   out_6416191868946148009[0] = 1.0;
   out_6416191868946148009[1] = 0.0;
   out_6416191868946148009[2] = 0.0;
   out_6416191868946148009[3] = 0.0;
   out_6416191868946148009[4] = 0.0;
   out_6416191868946148009[5] = 0.0;
   out_6416191868946148009[6] = 0.0;
   out_6416191868946148009[7] = 0.0;
   out_6416191868946148009[8] = 0.0;
   out_6416191868946148009[9] = 0.0;
   out_6416191868946148009[10] = 0.0;
   out_6416191868946148009[11] = 0.0;
   out_6416191868946148009[12] = 0.0;
   out_6416191868946148009[13] = 0.0;
   out_6416191868946148009[14] = 0.0;
   out_6416191868946148009[15] = 0.0;
   out_6416191868946148009[16] = 0.0;
   out_6416191868946148009[17] = 0.0;
   out_6416191868946148009[18] = 0.0;
   out_6416191868946148009[19] = 0.0;
   out_6416191868946148009[20] = 0.0;
   out_6416191868946148009[21] = 0.0;
   out_6416191868946148009[22] = 1.0;
   out_6416191868946148009[23] = 0.0;
   out_6416191868946148009[24] = 0.0;
   out_6416191868946148009[25] = 0.0;
   out_6416191868946148009[26] = 0.0;
   out_6416191868946148009[27] = 0.0;
   out_6416191868946148009[28] = 0.0;
   out_6416191868946148009[29] = 0.0;
   out_6416191868946148009[30] = 0.0;
   out_6416191868946148009[31] = 0.0;
   out_6416191868946148009[32] = 0.0;
   out_6416191868946148009[33] = 0.0;
   out_6416191868946148009[34] = 0.0;
   out_6416191868946148009[35] = 0.0;
   out_6416191868946148009[36] = 0.0;
   out_6416191868946148009[37] = 0.0;
   out_6416191868946148009[38] = 0.0;
   out_6416191868946148009[39] = 0.0;
   out_6416191868946148009[40] = 0.0;
   out_6416191868946148009[41] = 0.0;
   out_6416191868946148009[42] = 0.0;
   out_6416191868946148009[43] = 0.0;
   out_6416191868946148009[44] = 1.0;
   out_6416191868946148009[45] = 0.0;
   out_6416191868946148009[46] = 0.0;
   out_6416191868946148009[47] = 0.0;
   out_6416191868946148009[48] = 0.0;
   out_6416191868946148009[49] = 0.0;
   out_6416191868946148009[50] = 0.0;
   out_6416191868946148009[51] = 0.0;
   out_6416191868946148009[52] = 0.0;
   out_6416191868946148009[53] = 0.0;
   out_6416191868946148009[54] = 0.0;
   out_6416191868946148009[55] = 0.0;
   out_6416191868946148009[56] = 0.0;
   out_6416191868946148009[57] = 0.0;
   out_6416191868946148009[58] = 0.0;
   out_6416191868946148009[59] = 0.0;
   out_6416191868946148009[60] = 0.0;
   out_6416191868946148009[61] = 0.0;
   out_6416191868946148009[62] = 0.0;
   out_6416191868946148009[63] = 0.0;
   out_6416191868946148009[64] = 0.0;
   out_6416191868946148009[65] = 0.0;
   out_6416191868946148009[66] = -0.5*state[4];
   out_6416191868946148009[67] = -0.5*state[5];
   out_6416191868946148009[68] = -0.5*state[6];
   out_6416191868946148009[69] = 0.0;
   out_6416191868946148009[70] = 0.0;
   out_6416191868946148009[71] = 0.0;
   out_6416191868946148009[72] = 0.0;
   out_6416191868946148009[73] = 0.0;
   out_6416191868946148009[74] = 0.0;
   out_6416191868946148009[75] = 0.0;
   out_6416191868946148009[76] = 0.0;
   out_6416191868946148009[77] = 0.0;
   out_6416191868946148009[78] = 0.0;
   out_6416191868946148009[79] = 0.0;
   out_6416191868946148009[80] = 0.0;
   out_6416191868946148009[81] = 0.0;
   out_6416191868946148009[82] = 0.0;
   out_6416191868946148009[83] = 0.0;
   out_6416191868946148009[84] = 0.0;
   out_6416191868946148009[85] = 0.0;
   out_6416191868946148009[86] = 0.0;
   out_6416191868946148009[87] = 0.5*state[3];
   out_6416191868946148009[88] = 0.5*state[6];
   out_6416191868946148009[89] = -0.5*state[5];
   out_6416191868946148009[90] = 0.0;
   out_6416191868946148009[91] = 0.0;
   out_6416191868946148009[92] = 0.0;
   out_6416191868946148009[93] = 0.0;
   out_6416191868946148009[94] = 0.0;
   out_6416191868946148009[95] = 0.0;
   out_6416191868946148009[96] = 0.0;
   out_6416191868946148009[97] = 0.0;
   out_6416191868946148009[98] = 0.0;
   out_6416191868946148009[99] = 0.0;
   out_6416191868946148009[100] = 0.0;
   out_6416191868946148009[101] = 0.0;
   out_6416191868946148009[102] = 0.0;
   out_6416191868946148009[103] = 0.0;
   out_6416191868946148009[104] = 0.0;
   out_6416191868946148009[105] = 0.0;
   out_6416191868946148009[106] = 0.0;
   out_6416191868946148009[107] = 0.0;
   out_6416191868946148009[108] = -0.5*state[6];
   out_6416191868946148009[109] = 0.5*state[3];
   out_6416191868946148009[110] = 0.5*state[4];
   out_6416191868946148009[111] = 0.0;
   out_6416191868946148009[112] = 0.0;
   out_6416191868946148009[113] = 0.0;
   out_6416191868946148009[114] = 0.0;
   out_6416191868946148009[115] = 0.0;
   out_6416191868946148009[116] = 0.0;
   out_6416191868946148009[117] = 0.0;
   out_6416191868946148009[118] = 0.0;
   out_6416191868946148009[119] = 0.0;
   out_6416191868946148009[120] = 0.0;
   out_6416191868946148009[121] = 0.0;
   out_6416191868946148009[122] = 0.0;
   out_6416191868946148009[123] = 0.0;
   out_6416191868946148009[124] = 0.0;
   out_6416191868946148009[125] = 0.0;
   out_6416191868946148009[126] = 0.0;
   out_6416191868946148009[127] = 0.0;
   out_6416191868946148009[128] = 0.0;
   out_6416191868946148009[129] = 0.5*state[5];
   out_6416191868946148009[130] = -0.5*state[4];
   out_6416191868946148009[131] = 0.5*state[3];
   out_6416191868946148009[132] = 0.0;
   out_6416191868946148009[133] = 0.0;
   out_6416191868946148009[134] = 0.0;
   out_6416191868946148009[135] = 0.0;
   out_6416191868946148009[136] = 0.0;
   out_6416191868946148009[137] = 0.0;
   out_6416191868946148009[138] = 0.0;
   out_6416191868946148009[139] = 0.0;
   out_6416191868946148009[140] = 0.0;
   out_6416191868946148009[141] = 0.0;
   out_6416191868946148009[142] = 0.0;
   out_6416191868946148009[143] = 0.0;
   out_6416191868946148009[144] = 0.0;
   out_6416191868946148009[145] = 0.0;
   out_6416191868946148009[146] = 0.0;
   out_6416191868946148009[147] = 0.0;
   out_6416191868946148009[148] = 0.0;
   out_6416191868946148009[149] = 0.0;
   out_6416191868946148009[150] = 0.0;
   out_6416191868946148009[151] = 0.0;
   out_6416191868946148009[152] = 0.0;
   out_6416191868946148009[153] = 1.0;
   out_6416191868946148009[154] = 0.0;
   out_6416191868946148009[155] = 0.0;
   out_6416191868946148009[156] = 0.0;
   out_6416191868946148009[157] = 0.0;
   out_6416191868946148009[158] = 0.0;
   out_6416191868946148009[159] = 0.0;
   out_6416191868946148009[160] = 0.0;
   out_6416191868946148009[161] = 0.0;
   out_6416191868946148009[162] = 0.0;
   out_6416191868946148009[163] = 0.0;
   out_6416191868946148009[164] = 0.0;
   out_6416191868946148009[165] = 0.0;
   out_6416191868946148009[166] = 0.0;
   out_6416191868946148009[167] = 0.0;
   out_6416191868946148009[168] = 0.0;
   out_6416191868946148009[169] = 0.0;
   out_6416191868946148009[170] = 0.0;
   out_6416191868946148009[171] = 0.0;
   out_6416191868946148009[172] = 0.0;
   out_6416191868946148009[173] = 0.0;
   out_6416191868946148009[174] = 0.0;
   out_6416191868946148009[175] = 1.0;
   out_6416191868946148009[176] = 0.0;
   out_6416191868946148009[177] = 0.0;
   out_6416191868946148009[178] = 0.0;
   out_6416191868946148009[179] = 0.0;
   out_6416191868946148009[180] = 0.0;
   out_6416191868946148009[181] = 0.0;
   out_6416191868946148009[182] = 0.0;
   out_6416191868946148009[183] = 0.0;
   out_6416191868946148009[184] = 0.0;
   out_6416191868946148009[185] = 0.0;
   out_6416191868946148009[186] = 0.0;
   out_6416191868946148009[187] = 0.0;
   out_6416191868946148009[188] = 0.0;
   out_6416191868946148009[189] = 0.0;
   out_6416191868946148009[190] = 0.0;
   out_6416191868946148009[191] = 0.0;
   out_6416191868946148009[192] = 0.0;
   out_6416191868946148009[193] = 0.0;
   out_6416191868946148009[194] = 0.0;
   out_6416191868946148009[195] = 0.0;
   out_6416191868946148009[196] = 0.0;
   out_6416191868946148009[197] = 1.0;
   out_6416191868946148009[198] = 0.0;
   out_6416191868946148009[199] = 0.0;
   out_6416191868946148009[200] = 0.0;
   out_6416191868946148009[201] = 0.0;
   out_6416191868946148009[202] = 0.0;
   out_6416191868946148009[203] = 0.0;
   out_6416191868946148009[204] = 0.0;
   out_6416191868946148009[205] = 0.0;
   out_6416191868946148009[206] = 0.0;
   out_6416191868946148009[207] = 0.0;
   out_6416191868946148009[208] = 0.0;
   out_6416191868946148009[209] = 0.0;
   out_6416191868946148009[210] = 0.0;
   out_6416191868946148009[211] = 0.0;
   out_6416191868946148009[212] = 0.0;
   out_6416191868946148009[213] = 0.0;
   out_6416191868946148009[214] = 0.0;
   out_6416191868946148009[215] = 0.0;
   out_6416191868946148009[216] = 0.0;
   out_6416191868946148009[217] = 0.0;
   out_6416191868946148009[218] = 0.0;
   out_6416191868946148009[219] = 1.0;
   out_6416191868946148009[220] = 0.0;
   out_6416191868946148009[221] = 0.0;
   out_6416191868946148009[222] = 0.0;
   out_6416191868946148009[223] = 0.0;
   out_6416191868946148009[224] = 0.0;
   out_6416191868946148009[225] = 0.0;
   out_6416191868946148009[226] = 0.0;
   out_6416191868946148009[227] = 0.0;
   out_6416191868946148009[228] = 0.0;
   out_6416191868946148009[229] = 0.0;
   out_6416191868946148009[230] = 0.0;
   out_6416191868946148009[231] = 0.0;
   out_6416191868946148009[232] = 0.0;
   out_6416191868946148009[233] = 0.0;
   out_6416191868946148009[234] = 0.0;
   out_6416191868946148009[235] = 0.0;
   out_6416191868946148009[236] = 0.0;
   out_6416191868946148009[237] = 0.0;
   out_6416191868946148009[238] = 0.0;
   out_6416191868946148009[239] = 0.0;
   out_6416191868946148009[240] = 0.0;
   out_6416191868946148009[241] = 1.0;
   out_6416191868946148009[242] = 0.0;
   out_6416191868946148009[243] = 0.0;
   out_6416191868946148009[244] = 0.0;
   out_6416191868946148009[245] = 0.0;
   out_6416191868946148009[246] = 0.0;
   out_6416191868946148009[247] = 0.0;
   out_6416191868946148009[248] = 0.0;
   out_6416191868946148009[249] = 0.0;
   out_6416191868946148009[250] = 0.0;
   out_6416191868946148009[251] = 0.0;
   out_6416191868946148009[252] = 0.0;
   out_6416191868946148009[253] = 0.0;
   out_6416191868946148009[254] = 0.0;
   out_6416191868946148009[255] = 0.0;
   out_6416191868946148009[256] = 0.0;
   out_6416191868946148009[257] = 0.0;
   out_6416191868946148009[258] = 0.0;
   out_6416191868946148009[259] = 0.0;
   out_6416191868946148009[260] = 0.0;
   out_6416191868946148009[261] = 0.0;
   out_6416191868946148009[262] = 0.0;
   out_6416191868946148009[263] = 1.0;
   out_6416191868946148009[264] = 0.0;
   out_6416191868946148009[265] = 0.0;
   out_6416191868946148009[266] = 0.0;
   out_6416191868946148009[267] = 0.0;
   out_6416191868946148009[268] = 0.0;
   out_6416191868946148009[269] = 0.0;
   out_6416191868946148009[270] = 0.0;
   out_6416191868946148009[271] = 0.0;
   out_6416191868946148009[272] = 0.0;
   out_6416191868946148009[273] = 0.0;
   out_6416191868946148009[274] = 0.0;
   out_6416191868946148009[275] = 0.0;
   out_6416191868946148009[276] = 0.0;
   out_6416191868946148009[277] = 0.0;
   out_6416191868946148009[278] = 0.0;
   out_6416191868946148009[279] = 0.0;
   out_6416191868946148009[280] = 0.0;
   out_6416191868946148009[281] = 0.0;
   out_6416191868946148009[282] = 0.0;
   out_6416191868946148009[283] = 0.0;
   out_6416191868946148009[284] = 0.0;
   out_6416191868946148009[285] = 1.0;
   out_6416191868946148009[286] = 0.0;
   out_6416191868946148009[287] = 0.0;
   out_6416191868946148009[288] = 0.0;
   out_6416191868946148009[289] = 0.0;
   out_6416191868946148009[290] = 0.0;
   out_6416191868946148009[291] = 0.0;
   out_6416191868946148009[292] = 0.0;
   out_6416191868946148009[293] = 0.0;
   out_6416191868946148009[294] = 0.0;
   out_6416191868946148009[295] = 0.0;
   out_6416191868946148009[296] = 0.0;
   out_6416191868946148009[297] = 0.0;
   out_6416191868946148009[298] = 0.0;
   out_6416191868946148009[299] = 0.0;
   out_6416191868946148009[300] = 0.0;
   out_6416191868946148009[301] = 0.0;
   out_6416191868946148009[302] = 0.0;
   out_6416191868946148009[303] = 0.0;
   out_6416191868946148009[304] = 0.0;
   out_6416191868946148009[305] = 0.0;
   out_6416191868946148009[306] = 0.0;
   out_6416191868946148009[307] = 1.0;
   out_6416191868946148009[308] = 0.0;
   out_6416191868946148009[309] = 0.0;
   out_6416191868946148009[310] = 0.0;
   out_6416191868946148009[311] = 0.0;
   out_6416191868946148009[312] = 0.0;
   out_6416191868946148009[313] = 0.0;
   out_6416191868946148009[314] = 0.0;
   out_6416191868946148009[315] = 0.0;
   out_6416191868946148009[316] = 0.0;
   out_6416191868946148009[317] = 0.0;
   out_6416191868946148009[318] = 0.0;
   out_6416191868946148009[319] = 0.0;
   out_6416191868946148009[320] = 0.0;
   out_6416191868946148009[321] = 0.0;
   out_6416191868946148009[322] = 0.0;
   out_6416191868946148009[323] = 0.0;
   out_6416191868946148009[324] = 0.0;
   out_6416191868946148009[325] = 0.0;
   out_6416191868946148009[326] = 0.0;
   out_6416191868946148009[327] = 0.0;
   out_6416191868946148009[328] = 0.0;
   out_6416191868946148009[329] = 1.0;
   out_6416191868946148009[330] = 0.0;
   out_6416191868946148009[331] = 0.0;
   out_6416191868946148009[332] = 0.0;
   out_6416191868946148009[333] = 0.0;
   out_6416191868946148009[334] = 0.0;
   out_6416191868946148009[335] = 0.0;
   out_6416191868946148009[336] = 0.0;
   out_6416191868946148009[337] = 0.0;
   out_6416191868946148009[338] = 0.0;
   out_6416191868946148009[339] = 0.0;
   out_6416191868946148009[340] = 0.0;
   out_6416191868946148009[341] = 0.0;
   out_6416191868946148009[342] = 0.0;
   out_6416191868946148009[343] = 0.0;
   out_6416191868946148009[344] = 0.0;
   out_6416191868946148009[345] = 0.0;
   out_6416191868946148009[346] = 0.0;
   out_6416191868946148009[347] = 0.0;
   out_6416191868946148009[348] = 0.0;
   out_6416191868946148009[349] = 0.0;
   out_6416191868946148009[350] = 0.0;
   out_6416191868946148009[351] = 1.0;
   out_6416191868946148009[352] = 0.0;
   out_6416191868946148009[353] = 0.0;
   out_6416191868946148009[354] = 0.0;
   out_6416191868946148009[355] = 0.0;
   out_6416191868946148009[356] = 0.0;
   out_6416191868946148009[357] = 0.0;
   out_6416191868946148009[358] = 0.0;
   out_6416191868946148009[359] = 0.0;
   out_6416191868946148009[360] = 0.0;
   out_6416191868946148009[361] = 0.0;
   out_6416191868946148009[362] = 0.0;
   out_6416191868946148009[363] = 0.0;
   out_6416191868946148009[364] = 0.0;
   out_6416191868946148009[365] = 0.0;
   out_6416191868946148009[366] = 0.0;
   out_6416191868946148009[367] = 0.0;
   out_6416191868946148009[368] = 0.0;
   out_6416191868946148009[369] = 0.0;
   out_6416191868946148009[370] = 0.0;
   out_6416191868946148009[371] = 0.0;
   out_6416191868946148009[372] = 0.0;
   out_6416191868946148009[373] = 1.0;
   out_6416191868946148009[374] = 0.0;
   out_6416191868946148009[375] = 0.0;
   out_6416191868946148009[376] = 0.0;
   out_6416191868946148009[377] = 0.0;
   out_6416191868946148009[378] = 0.0;
   out_6416191868946148009[379] = 0.0;
   out_6416191868946148009[380] = 0.0;
   out_6416191868946148009[381] = 0.0;
   out_6416191868946148009[382] = 0.0;
   out_6416191868946148009[383] = 0.0;
   out_6416191868946148009[384] = 0.0;
   out_6416191868946148009[385] = 0.0;
   out_6416191868946148009[386] = 0.0;
   out_6416191868946148009[387] = 0.0;
   out_6416191868946148009[388] = 0.0;
   out_6416191868946148009[389] = 0.0;
   out_6416191868946148009[390] = 0.0;
   out_6416191868946148009[391] = 0.0;
   out_6416191868946148009[392] = 0.0;
   out_6416191868946148009[393] = 0.0;
   out_6416191868946148009[394] = 0.0;
   out_6416191868946148009[395] = 1.0;
   out_6416191868946148009[396] = 0.0;
   out_6416191868946148009[397] = 0.0;
   out_6416191868946148009[398] = 0.0;
   out_6416191868946148009[399] = 0.0;
   out_6416191868946148009[400] = 0.0;
   out_6416191868946148009[401] = 0.0;
   out_6416191868946148009[402] = 0.0;
   out_6416191868946148009[403] = 0.0;
   out_6416191868946148009[404] = 0.0;
   out_6416191868946148009[405] = 0.0;
   out_6416191868946148009[406] = 0.0;
   out_6416191868946148009[407] = 0.0;
   out_6416191868946148009[408] = 0.0;
   out_6416191868946148009[409] = 0.0;
   out_6416191868946148009[410] = 0.0;
   out_6416191868946148009[411] = 0.0;
   out_6416191868946148009[412] = 0.0;
   out_6416191868946148009[413] = 0.0;
   out_6416191868946148009[414] = 0.0;
   out_6416191868946148009[415] = 0.0;
   out_6416191868946148009[416] = 0.0;
   out_6416191868946148009[417] = 1.0;
   out_6416191868946148009[418] = 0.0;
   out_6416191868946148009[419] = 0.0;
   out_6416191868946148009[420] = 0.0;
   out_6416191868946148009[421] = 0.0;
   out_6416191868946148009[422] = 0.0;
   out_6416191868946148009[423] = 0.0;
   out_6416191868946148009[424] = 0.0;
   out_6416191868946148009[425] = 0.0;
   out_6416191868946148009[426] = 0.0;
   out_6416191868946148009[427] = 0.0;
   out_6416191868946148009[428] = 0.0;
   out_6416191868946148009[429] = 0.0;
   out_6416191868946148009[430] = 0.0;
   out_6416191868946148009[431] = 0.0;
   out_6416191868946148009[432] = 0.0;
   out_6416191868946148009[433] = 0.0;
   out_6416191868946148009[434] = 0.0;
   out_6416191868946148009[435] = 0.0;
   out_6416191868946148009[436] = 0.0;
   out_6416191868946148009[437] = 0.0;
   out_6416191868946148009[438] = 0.0;
   out_6416191868946148009[439] = 1.0;
   out_6416191868946148009[440] = 0.0;
   out_6416191868946148009[441] = 0.0;
   out_6416191868946148009[442] = 0.0;
   out_6416191868946148009[443] = 0.0;
   out_6416191868946148009[444] = 0.0;
   out_6416191868946148009[445] = 0.0;
   out_6416191868946148009[446] = 0.0;
   out_6416191868946148009[447] = 0.0;
   out_6416191868946148009[448] = 0.0;
   out_6416191868946148009[449] = 0.0;
   out_6416191868946148009[450] = 0.0;
   out_6416191868946148009[451] = 0.0;
   out_6416191868946148009[452] = 0.0;
   out_6416191868946148009[453] = 0.0;
   out_6416191868946148009[454] = 0.0;
   out_6416191868946148009[455] = 0.0;
   out_6416191868946148009[456] = 0.0;
   out_6416191868946148009[457] = 0.0;
   out_6416191868946148009[458] = 0.0;
   out_6416191868946148009[459] = 0.0;
   out_6416191868946148009[460] = 0.0;
   out_6416191868946148009[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3264604968293694097) {
   out_3264604968293694097[0] = dt*state[7] + state[0];
   out_3264604968293694097[1] = dt*state[8] + state[1];
   out_3264604968293694097[2] = dt*state[9] + state[2];
   out_3264604968293694097[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3264604968293694097[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3264604968293694097[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3264604968293694097[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3264604968293694097[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3264604968293694097[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3264604968293694097[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3264604968293694097[10] = state[10];
   out_3264604968293694097[11] = state[11];
   out_3264604968293694097[12] = state[12];
   out_3264604968293694097[13] = state[13];
   out_3264604968293694097[14] = state[14];
   out_3264604968293694097[15] = state[15];
   out_3264604968293694097[16] = state[16];
   out_3264604968293694097[17] = state[17];
   out_3264604968293694097[18] = state[18];
   out_3264604968293694097[19] = state[19];
   out_3264604968293694097[20] = state[20];
   out_3264604968293694097[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1741995097926784820) {
   out_1741995097926784820[0] = 1;
   out_1741995097926784820[1] = 0;
   out_1741995097926784820[2] = 0;
   out_1741995097926784820[3] = 0;
   out_1741995097926784820[4] = 0;
   out_1741995097926784820[5] = 0;
   out_1741995097926784820[6] = dt;
   out_1741995097926784820[7] = 0;
   out_1741995097926784820[8] = 0;
   out_1741995097926784820[9] = 0;
   out_1741995097926784820[10] = 0;
   out_1741995097926784820[11] = 0;
   out_1741995097926784820[12] = 0;
   out_1741995097926784820[13] = 0;
   out_1741995097926784820[14] = 0;
   out_1741995097926784820[15] = 0;
   out_1741995097926784820[16] = 0;
   out_1741995097926784820[17] = 0;
   out_1741995097926784820[18] = 0;
   out_1741995097926784820[19] = 0;
   out_1741995097926784820[20] = 0;
   out_1741995097926784820[21] = 0;
   out_1741995097926784820[22] = 1;
   out_1741995097926784820[23] = 0;
   out_1741995097926784820[24] = 0;
   out_1741995097926784820[25] = 0;
   out_1741995097926784820[26] = 0;
   out_1741995097926784820[27] = 0;
   out_1741995097926784820[28] = dt;
   out_1741995097926784820[29] = 0;
   out_1741995097926784820[30] = 0;
   out_1741995097926784820[31] = 0;
   out_1741995097926784820[32] = 0;
   out_1741995097926784820[33] = 0;
   out_1741995097926784820[34] = 0;
   out_1741995097926784820[35] = 0;
   out_1741995097926784820[36] = 0;
   out_1741995097926784820[37] = 0;
   out_1741995097926784820[38] = 0;
   out_1741995097926784820[39] = 0;
   out_1741995097926784820[40] = 0;
   out_1741995097926784820[41] = 0;
   out_1741995097926784820[42] = 0;
   out_1741995097926784820[43] = 0;
   out_1741995097926784820[44] = 1;
   out_1741995097926784820[45] = 0;
   out_1741995097926784820[46] = 0;
   out_1741995097926784820[47] = 0;
   out_1741995097926784820[48] = 0;
   out_1741995097926784820[49] = 0;
   out_1741995097926784820[50] = dt;
   out_1741995097926784820[51] = 0;
   out_1741995097926784820[52] = 0;
   out_1741995097926784820[53] = 0;
   out_1741995097926784820[54] = 0;
   out_1741995097926784820[55] = 0;
   out_1741995097926784820[56] = 0;
   out_1741995097926784820[57] = 0;
   out_1741995097926784820[58] = 0;
   out_1741995097926784820[59] = 0;
   out_1741995097926784820[60] = 0;
   out_1741995097926784820[61] = 0;
   out_1741995097926784820[62] = 0;
   out_1741995097926784820[63] = 0;
   out_1741995097926784820[64] = 0;
   out_1741995097926784820[65] = 0;
   out_1741995097926784820[66] = 1;
   out_1741995097926784820[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1741995097926784820[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1741995097926784820[69] = 0;
   out_1741995097926784820[70] = 0;
   out_1741995097926784820[71] = 0;
   out_1741995097926784820[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1741995097926784820[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1741995097926784820[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1741995097926784820[75] = 0;
   out_1741995097926784820[76] = 0;
   out_1741995097926784820[77] = 0;
   out_1741995097926784820[78] = 0;
   out_1741995097926784820[79] = 0;
   out_1741995097926784820[80] = 0;
   out_1741995097926784820[81] = 0;
   out_1741995097926784820[82] = 0;
   out_1741995097926784820[83] = 0;
   out_1741995097926784820[84] = 0;
   out_1741995097926784820[85] = 0;
   out_1741995097926784820[86] = 0;
   out_1741995097926784820[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1741995097926784820[88] = 1;
   out_1741995097926784820[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1741995097926784820[90] = 0;
   out_1741995097926784820[91] = 0;
   out_1741995097926784820[92] = 0;
   out_1741995097926784820[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1741995097926784820[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1741995097926784820[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1741995097926784820[96] = 0;
   out_1741995097926784820[97] = 0;
   out_1741995097926784820[98] = 0;
   out_1741995097926784820[99] = 0;
   out_1741995097926784820[100] = 0;
   out_1741995097926784820[101] = 0;
   out_1741995097926784820[102] = 0;
   out_1741995097926784820[103] = 0;
   out_1741995097926784820[104] = 0;
   out_1741995097926784820[105] = 0;
   out_1741995097926784820[106] = 0;
   out_1741995097926784820[107] = 0;
   out_1741995097926784820[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1741995097926784820[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1741995097926784820[110] = 1;
   out_1741995097926784820[111] = 0;
   out_1741995097926784820[112] = 0;
   out_1741995097926784820[113] = 0;
   out_1741995097926784820[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1741995097926784820[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1741995097926784820[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1741995097926784820[117] = 0;
   out_1741995097926784820[118] = 0;
   out_1741995097926784820[119] = 0;
   out_1741995097926784820[120] = 0;
   out_1741995097926784820[121] = 0;
   out_1741995097926784820[122] = 0;
   out_1741995097926784820[123] = 0;
   out_1741995097926784820[124] = 0;
   out_1741995097926784820[125] = 0;
   out_1741995097926784820[126] = 0;
   out_1741995097926784820[127] = 0;
   out_1741995097926784820[128] = 0;
   out_1741995097926784820[129] = 0;
   out_1741995097926784820[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1741995097926784820[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1741995097926784820[132] = 1;
   out_1741995097926784820[133] = 0;
   out_1741995097926784820[134] = 0;
   out_1741995097926784820[135] = 0;
   out_1741995097926784820[136] = 0;
   out_1741995097926784820[137] = 0;
   out_1741995097926784820[138] = 0;
   out_1741995097926784820[139] = 0;
   out_1741995097926784820[140] = 0;
   out_1741995097926784820[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1741995097926784820[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1741995097926784820[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1741995097926784820[144] = 0;
   out_1741995097926784820[145] = 0;
   out_1741995097926784820[146] = 0;
   out_1741995097926784820[147] = 0;
   out_1741995097926784820[148] = 0;
   out_1741995097926784820[149] = 0;
   out_1741995097926784820[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1741995097926784820[151] = 0;
   out_1741995097926784820[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1741995097926784820[153] = 0;
   out_1741995097926784820[154] = 1;
   out_1741995097926784820[155] = 0;
   out_1741995097926784820[156] = 0;
   out_1741995097926784820[157] = 0;
   out_1741995097926784820[158] = 0;
   out_1741995097926784820[159] = 0;
   out_1741995097926784820[160] = 0;
   out_1741995097926784820[161] = 0;
   out_1741995097926784820[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1741995097926784820[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1741995097926784820[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1741995097926784820[165] = 0;
   out_1741995097926784820[166] = 0;
   out_1741995097926784820[167] = 0;
   out_1741995097926784820[168] = 0;
   out_1741995097926784820[169] = 0;
   out_1741995097926784820[170] = 0;
   out_1741995097926784820[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1741995097926784820[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1741995097926784820[173] = 0;
   out_1741995097926784820[174] = 0;
   out_1741995097926784820[175] = 0;
   out_1741995097926784820[176] = 1;
   out_1741995097926784820[177] = 0;
   out_1741995097926784820[178] = 0;
   out_1741995097926784820[179] = 0;
   out_1741995097926784820[180] = 0;
   out_1741995097926784820[181] = 0;
   out_1741995097926784820[182] = 0;
   out_1741995097926784820[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1741995097926784820[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1741995097926784820[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1741995097926784820[186] = 0;
   out_1741995097926784820[187] = 0;
   out_1741995097926784820[188] = 0;
   out_1741995097926784820[189] = 0;
   out_1741995097926784820[190] = 0;
   out_1741995097926784820[191] = 0;
   out_1741995097926784820[192] = 0;
   out_1741995097926784820[193] = 0;
   out_1741995097926784820[194] = 0;
   out_1741995097926784820[195] = 0;
   out_1741995097926784820[196] = 0;
   out_1741995097926784820[197] = 0;
   out_1741995097926784820[198] = 1;
   out_1741995097926784820[199] = 0;
   out_1741995097926784820[200] = 0;
   out_1741995097926784820[201] = 0;
   out_1741995097926784820[202] = 0;
   out_1741995097926784820[203] = 0;
   out_1741995097926784820[204] = 0;
   out_1741995097926784820[205] = 0;
   out_1741995097926784820[206] = 0;
   out_1741995097926784820[207] = 0;
   out_1741995097926784820[208] = 0;
   out_1741995097926784820[209] = 0;
   out_1741995097926784820[210] = 0;
   out_1741995097926784820[211] = 0;
   out_1741995097926784820[212] = 0;
   out_1741995097926784820[213] = 0;
   out_1741995097926784820[214] = 0;
   out_1741995097926784820[215] = 0;
   out_1741995097926784820[216] = 0;
   out_1741995097926784820[217] = 0;
   out_1741995097926784820[218] = 0;
   out_1741995097926784820[219] = 0;
   out_1741995097926784820[220] = 1;
   out_1741995097926784820[221] = 0;
   out_1741995097926784820[222] = 0;
   out_1741995097926784820[223] = 0;
   out_1741995097926784820[224] = 0;
   out_1741995097926784820[225] = 0;
   out_1741995097926784820[226] = 0;
   out_1741995097926784820[227] = 0;
   out_1741995097926784820[228] = 0;
   out_1741995097926784820[229] = 0;
   out_1741995097926784820[230] = 0;
   out_1741995097926784820[231] = 0;
   out_1741995097926784820[232] = 0;
   out_1741995097926784820[233] = 0;
   out_1741995097926784820[234] = 0;
   out_1741995097926784820[235] = 0;
   out_1741995097926784820[236] = 0;
   out_1741995097926784820[237] = 0;
   out_1741995097926784820[238] = 0;
   out_1741995097926784820[239] = 0;
   out_1741995097926784820[240] = 0;
   out_1741995097926784820[241] = 0;
   out_1741995097926784820[242] = 1;
   out_1741995097926784820[243] = 0;
   out_1741995097926784820[244] = 0;
   out_1741995097926784820[245] = 0;
   out_1741995097926784820[246] = 0;
   out_1741995097926784820[247] = 0;
   out_1741995097926784820[248] = 0;
   out_1741995097926784820[249] = 0;
   out_1741995097926784820[250] = 0;
   out_1741995097926784820[251] = 0;
   out_1741995097926784820[252] = 0;
   out_1741995097926784820[253] = 0;
   out_1741995097926784820[254] = 0;
   out_1741995097926784820[255] = 0;
   out_1741995097926784820[256] = 0;
   out_1741995097926784820[257] = 0;
   out_1741995097926784820[258] = 0;
   out_1741995097926784820[259] = 0;
   out_1741995097926784820[260] = 0;
   out_1741995097926784820[261] = 0;
   out_1741995097926784820[262] = 0;
   out_1741995097926784820[263] = 0;
   out_1741995097926784820[264] = 1;
   out_1741995097926784820[265] = 0;
   out_1741995097926784820[266] = 0;
   out_1741995097926784820[267] = 0;
   out_1741995097926784820[268] = 0;
   out_1741995097926784820[269] = 0;
   out_1741995097926784820[270] = 0;
   out_1741995097926784820[271] = 0;
   out_1741995097926784820[272] = 0;
   out_1741995097926784820[273] = 0;
   out_1741995097926784820[274] = 0;
   out_1741995097926784820[275] = 0;
   out_1741995097926784820[276] = 0;
   out_1741995097926784820[277] = 0;
   out_1741995097926784820[278] = 0;
   out_1741995097926784820[279] = 0;
   out_1741995097926784820[280] = 0;
   out_1741995097926784820[281] = 0;
   out_1741995097926784820[282] = 0;
   out_1741995097926784820[283] = 0;
   out_1741995097926784820[284] = 0;
   out_1741995097926784820[285] = 0;
   out_1741995097926784820[286] = 1;
   out_1741995097926784820[287] = 0;
   out_1741995097926784820[288] = 0;
   out_1741995097926784820[289] = 0;
   out_1741995097926784820[290] = 0;
   out_1741995097926784820[291] = 0;
   out_1741995097926784820[292] = 0;
   out_1741995097926784820[293] = 0;
   out_1741995097926784820[294] = 0;
   out_1741995097926784820[295] = 0;
   out_1741995097926784820[296] = 0;
   out_1741995097926784820[297] = 0;
   out_1741995097926784820[298] = 0;
   out_1741995097926784820[299] = 0;
   out_1741995097926784820[300] = 0;
   out_1741995097926784820[301] = 0;
   out_1741995097926784820[302] = 0;
   out_1741995097926784820[303] = 0;
   out_1741995097926784820[304] = 0;
   out_1741995097926784820[305] = 0;
   out_1741995097926784820[306] = 0;
   out_1741995097926784820[307] = 0;
   out_1741995097926784820[308] = 1;
   out_1741995097926784820[309] = 0;
   out_1741995097926784820[310] = 0;
   out_1741995097926784820[311] = 0;
   out_1741995097926784820[312] = 0;
   out_1741995097926784820[313] = 0;
   out_1741995097926784820[314] = 0;
   out_1741995097926784820[315] = 0;
   out_1741995097926784820[316] = 0;
   out_1741995097926784820[317] = 0;
   out_1741995097926784820[318] = 0;
   out_1741995097926784820[319] = 0;
   out_1741995097926784820[320] = 0;
   out_1741995097926784820[321] = 0;
   out_1741995097926784820[322] = 0;
   out_1741995097926784820[323] = 0;
   out_1741995097926784820[324] = 0;
   out_1741995097926784820[325] = 0;
   out_1741995097926784820[326] = 0;
   out_1741995097926784820[327] = 0;
   out_1741995097926784820[328] = 0;
   out_1741995097926784820[329] = 0;
   out_1741995097926784820[330] = 1;
   out_1741995097926784820[331] = 0;
   out_1741995097926784820[332] = 0;
   out_1741995097926784820[333] = 0;
   out_1741995097926784820[334] = 0;
   out_1741995097926784820[335] = 0;
   out_1741995097926784820[336] = 0;
   out_1741995097926784820[337] = 0;
   out_1741995097926784820[338] = 0;
   out_1741995097926784820[339] = 0;
   out_1741995097926784820[340] = 0;
   out_1741995097926784820[341] = 0;
   out_1741995097926784820[342] = 0;
   out_1741995097926784820[343] = 0;
   out_1741995097926784820[344] = 0;
   out_1741995097926784820[345] = 0;
   out_1741995097926784820[346] = 0;
   out_1741995097926784820[347] = 0;
   out_1741995097926784820[348] = 0;
   out_1741995097926784820[349] = 0;
   out_1741995097926784820[350] = 0;
   out_1741995097926784820[351] = 0;
   out_1741995097926784820[352] = 1;
   out_1741995097926784820[353] = 0;
   out_1741995097926784820[354] = 0;
   out_1741995097926784820[355] = 0;
   out_1741995097926784820[356] = 0;
   out_1741995097926784820[357] = 0;
   out_1741995097926784820[358] = 0;
   out_1741995097926784820[359] = 0;
   out_1741995097926784820[360] = 0;
   out_1741995097926784820[361] = 0;
   out_1741995097926784820[362] = 0;
   out_1741995097926784820[363] = 0;
   out_1741995097926784820[364] = 0;
   out_1741995097926784820[365] = 0;
   out_1741995097926784820[366] = 0;
   out_1741995097926784820[367] = 0;
   out_1741995097926784820[368] = 0;
   out_1741995097926784820[369] = 0;
   out_1741995097926784820[370] = 0;
   out_1741995097926784820[371] = 0;
   out_1741995097926784820[372] = 0;
   out_1741995097926784820[373] = 0;
   out_1741995097926784820[374] = 1;
   out_1741995097926784820[375] = 0;
   out_1741995097926784820[376] = 0;
   out_1741995097926784820[377] = 0;
   out_1741995097926784820[378] = 0;
   out_1741995097926784820[379] = 0;
   out_1741995097926784820[380] = 0;
   out_1741995097926784820[381] = 0;
   out_1741995097926784820[382] = 0;
   out_1741995097926784820[383] = 0;
   out_1741995097926784820[384] = 0;
   out_1741995097926784820[385] = 0;
   out_1741995097926784820[386] = 0;
   out_1741995097926784820[387] = 0;
   out_1741995097926784820[388] = 0;
   out_1741995097926784820[389] = 0;
   out_1741995097926784820[390] = 0;
   out_1741995097926784820[391] = 0;
   out_1741995097926784820[392] = 0;
   out_1741995097926784820[393] = 0;
   out_1741995097926784820[394] = 0;
   out_1741995097926784820[395] = 0;
   out_1741995097926784820[396] = 1;
   out_1741995097926784820[397] = 0;
   out_1741995097926784820[398] = 0;
   out_1741995097926784820[399] = 0;
   out_1741995097926784820[400] = 0;
   out_1741995097926784820[401] = 0;
   out_1741995097926784820[402] = 0;
   out_1741995097926784820[403] = 0;
   out_1741995097926784820[404] = 0;
   out_1741995097926784820[405] = 0;
   out_1741995097926784820[406] = 0;
   out_1741995097926784820[407] = 0;
   out_1741995097926784820[408] = 0;
   out_1741995097926784820[409] = 0;
   out_1741995097926784820[410] = 0;
   out_1741995097926784820[411] = 0;
   out_1741995097926784820[412] = 0;
   out_1741995097926784820[413] = 0;
   out_1741995097926784820[414] = 0;
   out_1741995097926784820[415] = 0;
   out_1741995097926784820[416] = 0;
   out_1741995097926784820[417] = 0;
   out_1741995097926784820[418] = 1;
   out_1741995097926784820[419] = 0;
   out_1741995097926784820[420] = 0;
   out_1741995097926784820[421] = 0;
   out_1741995097926784820[422] = 0;
   out_1741995097926784820[423] = 0;
   out_1741995097926784820[424] = 0;
   out_1741995097926784820[425] = 0;
   out_1741995097926784820[426] = 0;
   out_1741995097926784820[427] = 0;
   out_1741995097926784820[428] = 0;
   out_1741995097926784820[429] = 0;
   out_1741995097926784820[430] = 0;
   out_1741995097926784820[431] = 0;
   out_1741995097926784820[432] = 0;
   out_1741995097926784820[433] = 0;
   out_1741995097926784820[434] = 0;
   out_1741995097926784820[435] = 0;
   out_1741995097926784820[436] = 0;
   out_1741995097926784820[437] = 0;
   out_1741995097926784820[438] = 0;
   out_1741995097926784820[439] = 0;
   out_1741995097926784820[440] = 1;
}
void h_4(double *state, double *unused, double *out_6343403930864150333) {
   out_6343403930864150333[0] = state[10] + state[13];
   out_6343403930864150333[1] = state[11] + state[14];
   out_6343403930864150333[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3788444243282928713) {
   out_3788444243282928713[0] = 0;
   out_3788444243282928713[1] = 0;
   out_3788444243282928713[2] = 0;
   out_3788444243282928713[3] = 0;
   out_3788444243282928713[4] = 0;
   out_3788444243282928713[5] = 0;
   out_3788444243282928713[6] = 0;
   out_3788444243282928713[7] = 0;
   out_3788444243282928713[8] = 0;
   out_3788444243282928713[9] = 0;
   out_3788444243282928713[10] = 1;
   out_3788444243282928713[11] = 0;
   out_3788444243282928713[12] = 0;
   out_3788444243282928713[13] = 1;
   out_3788444243282928713[14] = 0;
   out_3788444243282928713[15] = 0;
   out_3788444243282928713[16] = 0;
   out_3788444243282928713[17] = 0;
   out_3788444243282928713[18] = 0;
   out_3788444243282928713[19] = 0;
   out_3788444243282928713[20] = 0;
   out_3788444243282928713[21] = 0;
   out_3788444243282928713[22] = 0;
   out_3788444243282928713[23] = 0;
   out_3788444243282928713[24] = 0;
   out_3788444243282928713[25] = 0;
   out_3788444243282928713[26] = 0;
   out_3788444243282928713[27] = 0;
   out_3788444243282928713[28] = 0;
   out_3788444243282928713[29] = 0;
   out_3788444243282928713[30] = 0;
   out_3788444243282928713[31] = 0;
   out_3788444243282928713[32] = 0;
   out_3788444243282928713[33] = 1;
   out_3788444243282928713[34] = 0;
   out_3788444243282928713[35] = 0;
   out_3788444243282928713[36] = 1;
   out_3788444243282928713[37] = 0;
   out_3788444243282928713[38] = 0;
   out_3788444243282928713[39] = 0;
   out_3788444243282928713[40] = 0;
   out_3788444243282928713[41] = 0;
   out_3788444243282928713[42] = 0;
   out_3788444243282928713[43] = 0;
   out_3788444243282928713[44] = 0;
   out_3788444243282928713[45] = 0;
   out_3788444243282928713[46] = 0;
   out_3788444243282928713[47] = 0;
   out_3788444243282928713[48] = 0;
   out_3788444243282928713[49] = 0;
   out_3788444243282928713[50] = 0;
   out_3788444243282928713[51] = 0;
   out_3788444243282928713[52] = 0;
   out_3788444243282928713[53] = 0;
   out_3788444243282928713[54] = 0;
   out_3788444243282928713[55] = 0;
   out_3788444243282928713[56] = 1;
   out_3788444243282928713[57] = 0;
   out_3788444243282928713[58] = 0;
   out_3788444243282928713[59] = 1;
   out_3788444243282928713[60] = 0;
   out_3788444243282928713[61] = 0;
   out_3788444243282928713[62] = 0;
   out_3788444243282928713[63] = 0;
   out_3788444243282928713[64] = 0;
   out_3788444243282928713[65] = 0;
}
void h_9(double *state, double *unused, double *out_7503518715580627469) {
   out_7503518715580627469[0] = state[10];
   out_7503518715580627469[1] = state[11];
   out_7503518715580627469[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7371080895162175433) {
   out_7371080895162175433[0] = 0;
   out_7371080895162175433[1] = 0;
   out_7371080895162175433[2] = 0;
   out_7371080895162175433[3] = 0;
   out_7371080895162175433[4] = 0;
   out_7371080895162175433[5] = 0;
   out_7371080895162175433[6] = 0;
   out_7371080895162175433[7] = 0;
   out_7371080895162175433[8] = 0;
   out_7371080895162175433[9] = 0;
   out_7371080895162175433[10] = 1;
   out_7371080895162175433[11] = 0;
   out_7371080895162175433[12] = 0;
   out_7371080895162175433[13] = 0;
   out_7371080895162175433[14] = 0;
   out_7371080895162175433[15] = 0;
   out_7371080895162175433[16] = 0;
   out_7371080895162175433[17] = 0;
   out_7371080895162175433[18] = 0;
   out_7371080895162175433[19] = 0;
   out_7371080895162175433[20] = 0;
   out_7371080895162175433[21] = 0;
   out_7371080895162175433[22] = 0;
   out_7371080895162175433[23] = 0;
   out_7371080895162175433[24] = 0;
   out_7371080895162175433[25] = 0;
   out_7371080895162175433[26] = 0;
   out_7371080895162175433[27] = 0;
   out_7371080895162175433[28] = 0;
   out_7371080895162175433[29] = 0;
   out_7371080895162175433[30] = 0;
   out_7371080895162175433[31] = 0;
   out_7371080895162175433[32] = 0;
   out_7371080895162175433[33] = 1;
   out_7371080895162175433[34] = 0;
   out_7371080895162175433[35] = 0;
   out_7371080895162175433[36] = 0;
   out_7371080895162175433[37] = 0;
   out_7371080895162175433[38] = 0;
   out_7371080895162175433[39] = 0;
   out_7371080895162175433[40] = 0;
   out_7371080895162175433[41] = 0;
   out_7371080895162175433[42] = 0;
   out_7371080895162175433[43] = 0;
   out_7371080895162175433[44] = 0;
   out_7371080895162175433[45] = 0;
   out_7371080895162175433[46] = 0;
   out_7371080895162175433[47] = 0;
   out_7371080895162175433[48] = 0;
   out_7371080895162175433[49] = 0;
   out_7371080895162175433[50] = 0;
   out_7371080895162175433[51] = 0;
   out_7371080895162175433[52] = 0;
   out_7371080895162175433[53] = 0;
   out_7371080895162175433[54] = 0;
   out_7371080895162175433[55] = 0;
   out_7371080895162175433[56] = 1;
   out_7371080895162175433[57] = 0;
   out_7371080895162175433[58] = 0;
   out_7371080895162175433[59] = 0;
   out_7371080895162175433[60] = 0;
   out_7371080895162175433[61] = 0;
   out_7371080895162175433[62] = 0;
   out_7371080895162175433[63] = 0;
   out_7371080895162175433[64] = 0;
   out_7371080895162175433[65] = 0;
}
void h_10(double *state, double *unused, double *out_8411818234095403400) {
   out_8411818234095403400[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8411818234095403400[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8411818234095403400[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2755645111163305288) {
   out_2755645111163305288[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2755645111163305288[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2755645111163305288[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2755645111163305288[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2755645111163305288[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2755645111163305288[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2755645111163305288[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2755645111163305288[7] = 0;
   out_2755645111163305288[8] = 0;
   out_2755645111163305288[9] = 0;
   out_2755645111163305288[10] = 0;
   out_2755645111163305288[11] = 0;
   out_2755645111163305288[12] = 0;
   out_2755645111163305288[13] = 0;
   out_2755645111163305288[14] = 0;
   out_2755645111163305288[15] = 0;
   out_2755645111163305288[16] = 1;
   out_2755645111163305288[17] = 0;
   out_2755645111163305288[18] = 0;
   out_2755645111163305288[19] = 1;
   out_2755645111163305288[20] = 0;
   out_2755645111163305288[21] = 0;
   out_2755645111163305288[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2755645111163305288[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2755645111163305288[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2755645111163305288[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2755645111163305288[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2755645111163305288[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2755645111163305288[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2755645111163305288[29] = 0;
   out_2755645111163305288[30] = 0;
   out_2755645111163305288[31] = 0;
   out_2755645111163305288[32] = 0;
   out_2755645111163305288[33] = 0;
   out_2755645111163305288[34] = 0;
   out_2755645111163305288[35] = 0;
   out_2755645111163305288[36] = 0;
   out_2755645111163305288[37] = 0;
   out_2755645111163305288[38] = 0;
   out_2755645111163305288[39] = 1;
   out_2755645111163305288[40] = 0;
   out_2755645111163305288[41] = 0;
   out_2755645111163305288[42] = 1;
   out_2755645111163305288[43] = 0;
   out_2755645111163305288[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2755645111163305288[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2755645111163305288[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2755645111163305288[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2755645111163305288[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2755645111163305288[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2755645111163305288[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2755645111163305288[51] = 0;
   out_2755645111163305288[52] = 0;
   out_2755645111163305288[53] = 0;
   out_2755645111163305288[54] = 0;
   out_2755645111163305288[55] = 0;
   out_2755645111163305288[56] = 0;
   out_2755645111163305288[57] = 0;
   out_2755645111163305288[58] = 0;
   out_2755645111163305288[59] = 0;
   out_2755645111163305288[60] = 0;
   out_2755645111163305288[61] = 0;
   out_2755645111163305288[62] = 1;
   out_2755645111163305288[63] = 0;
   out_2755645111163305288[64] = 0;
   out_2755645111163305288[65] = 1;
}
void h_12(double *state, double *unused, double *out_8151414419776971058) {
   out_8151414419776971058[0] = state[0];
   out_8151414419776971058[1] = state[1];
   out_8151414419776971058[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2592814133759804283) {
   out_2592814133759804283[0] = 1;
   out_2592814133759804283[1] = 0;
   out_2592814133759804283[2] = 0;
   out_2592814133759804283[3] = 0;
   out_2592814133759804283[4] = 0;
   out_2592814133759804283[5] = 0;
   out_2592814133759804283[6] = 0;
   out_2592814133759804283[7] = 0;
   out_2592814133759804283[8] = 0;
   out_2592814133759804283[9] = 0;
   out_2592814133759804283[10] = 0;
   out_2592814133759804283[11] = 0;
   out_2592814133759804283[12] = 0;
   out_2592814133759804283[13] = 0;
   out_2592814133759804283[14] = 0;
   out_2592814133759804283[15] = 0;
   out_2592814133759804283[16] = 0;
   out_2592814133759804283[17] = 0;
   out_2592814133759804283[18] = 0;
   out_2592814133759804283[19] = 0;
   out_2592814133759804283[20] = 0;
   out_2592814133759804283[21] = 0;
   out_2592814133759804283[22] = 0;
   out_2592814133759804283[23] = 1;
   out_2592814133759804283[24] = 0;
   out_2592814133759804283[25] = 0;
   out_2592814133759804283[26] = 0;
   out_2592814133759804283[27] = 0;
   out_2592814133759804283[28] = 0;
   out_2592814133759804283[29] = 0;
   out_2592814133759804283[30] = 0;
   out_2592814133759804283[31] = 0;
   out_2592814133759804283[32] = 0;
   out_2592814133759804283[33] = 0;
   out_2592814133759804283[34] = 0;
   out_2592814133759804283[35] = 0;
   out_2592814133759804283[36] = 0;
   out_2592814133759804283[37] = 0;
   out_2592814133759804283[38] = 0;
   out_2592814133759804283[39] = 0;
   out_2592814133759804283[40] = 0;
   out_2592814133759804283[41] = 0;
   out_2592814133759804283[42] = 0;
   out_2592814133759804283[43] = 0;
   out_2592814133759804283[44] = 0;
   out_2592814133759804283[45] = 0;
   out_2592814133759804283[46] = 1;
   out_2592814133759804283[47] = 0;
   out_2592814133759804283[48] = 0;
   out_2592814133759804283[49] = 0;
   out_2592814133759804283[50] = 0;
   out_2592814133759804283[51] = 0;
   out_2592814133759804283[52] = 0;
   out_2592814133759804283[53] = 0;
   out_2592814133759804283[54] = 0;
   out_2592814133759804283[55] = 0;
   out_2592814133759804283[56] = 0;
   out_2592814133759804283[57] = 0;
   out_2592814133759804283[58] = 0;
   out_2592814133759804283[59] = 0;
   out_2592814133759804283[60] = 0;
   out_2592814133759804283[61] = 0;
   out_2592814133759804283[62] = 0;
   out_2592814133759804283[63] = 0;
   out_2592814133759804283[64] = 0;
   out_2592814133759804283[65] = 0;
}
void h_31(double *state, double *unused, double *out_6307158399764442839) {
   out_6307158399764442839[0] = state[7];
   out_6307158399764442839[1] = state[8];
   out_6307158399764442839[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4245608484419158702) {
   out_4245608484419158702[0] = 0;
   out_4245608484419158702[1] = 0;
   out_4245608484419158702[2] = 0;
   out_4245608484419158702[3] = 0;
   out_4245608484419158702[4] = 0;
   out_4245608484419158702[5] = 0;
   out_4245608484419158702[6] = 0;
   out_4245608484419158702[7] = 1;
   out_4245608484419158702[8] = 0;
   out_4245608484419158702[9] = 0;
   out_4245608484419158702[10] = 0;
   out_4245608484419158702[11] = 0;
   out_4245608484419158702[12] = 0;
   out_4245608484419158702[13] = 0;
   out_4245608484419158702[14] = 0;
   out_4245608484419158702[15] = 0;
   out_4245608484419158702[16] = 0;
   out_4245608484419158702[17] = 0;
   out_4245608484419158702[18] = 0;
   out_4245608484419158702[19] = 0;
   out_4245608484419158702[20] = 0;
   out_4245608484419158702[21] = 0;
   out_4245608484419158702[22] = 0;
   out_4245608484419158702[23] = 0;
   out_4245608484419158702[24] = 0;
   out_4245608484419158702[25] = 0;
   out_4245608484419158702[26] = 0;
   out_4245608484419158702[27] = 0;
   out_4245608484419158702[28] = 0;
   out_4245608484419158702[29] = 0;
   out_4245608484419158702[30] = 1;
   out_4245608484419158702[31] = 0;
   out_4245608484419158702[32] = 0;
   out_4245608484419158702[33] = 0;
   out_4245608484419158702[34] = 0;
   out_4245608484419158702[35] = 0;
   out_4245608484419158702[36] = 0;
   out_4245608484419158702[37] = 0;
   out_4245608484419158702[38] = 0;
   out_4245608484419158702[39] = 0;
   out_4245608484419158702[40] = 0;
   out_4245608484419158702[41] = 0;
   out_4245608484419158702[42] = 0;
   out_4245608484419158702[43] = 0;
   out_4245608484419158702[44] = 0;
   out_4245608484419158702[45] = 0;
   out_4245608484419158702[46] = 0;
   out_4245608484419158702[47] = 0;
   out_4245608484419158702[48] = 0;
   out_4245608484419158702[49] = 0;
   out_4245608484419158702[50] = 0;
   out_4245608484419158702[51] = 0;
   out_4245608484419158702[52] = 0;
   out_4245608484419158702[53] = 1;
   out_4245608484419158702[54] = 0;
   out_4245608484419158702[55] = 0;
   out_4245608484419158702[56] = 0;
   out_4245608484419158702[57] = 0;
   out_4245608484419158702[58] = 0;
   out_4245608484419158702[59] = 0;
   out_4245608484419158702[60] = 0;
   out_4245608484419158702[61] = 0;
   out_4245608484419158702[62] = 0;
   out_4245608484419158702[63] = 0;
   out_4245608484419158702[64] = 0;
   out_4245608484419158702[65] = 0;
}
void h_32(double *state, double *unused, double *out_2026782489563584114) {
   out_2026782489563584114[0] = state[3];
   out_2026782489563584114[1] = state[4];
   out_2026782489563584114[2] = state[5];
   out_2026782489563584114[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3700593238552368155) {
   out_3700593238552368155[0] = 0;
   out_3700593238552368155[1] = 0;
   out_3700593238552368155[2] = 0;
   out_3700593238552368155[3] = 1;
   out_3700593238552368155[4] = 0;
   out_3700593238552368155[5] = 0;
   out_3700593238552368155[6] = 0;
   out_3700593238552368155[7] = 0;
   out_3700593238552368155[8] = 0;
   out_3700593238552368155[9] = 0;
   out_3700593238552368155[10] = 0;
   out_3700593238552368155[11] = 0;
   out_3700593238552368155[12] = 0;
   out_3700593238552368155[13] = 0;
   out_3700593238552368155[14] = 0;
   out_3700593238552368155[15] = 0;
   out_3700593238552368155[16] = 0;
   out_3700593238552368155[17] = 0;
   out_3700593238552368155[18] = 0;
   out_3700593238552368155[19] = 0;
   out_3700593238552368155[20] = 0;
   out_3700593238552368155[21] = 0;
   out_3700593238552368155[22] = 0;
   out_3700593238552368155[23] = 0;
   out_3700593238552368155[24] = 0;
   out_3700593238552368155[25] = 0;
   out_3700593238552368155[26] = 1;
   out_3700593238552368155[27] = 0;
   out_3700593238552368155[28] = 0;
   out_3700593238552368155[29] = 0;
   out_3700593238552368155[30] = 0;
   out_3700593238552368155[31] = 0;
   out_3700593238552368155[32] = 0;
   out_3700593238552368155[33] = 0;
   out_3700593238552368155[34] = 0;
   out_3700593238552368155[35] = 0;
   out_3700593238552368155[36] = 0;
   out_3700593238552368155[37] = 0;
   out_3700593238552368155[38] = 0;
   out_3700593238552368155[39] = 0;
   out_3700593238552368155[40] = 0;
   out_3700593238552368155[41] = 0;
   out_3700593238552368155[42] = 0;
   out_3700593238552368155[43] = 0;
   out_3700593238552368155[44] = 0;
   out_3700593238552368155[45] = 0;
   out_3700593238552368155[46] = 0;
   out_3700593238552368155[47] = 0;
   out_3700593238552368155[48] = 0;
   out_3700593238552368155[49] = 1;
   out_3700593238552368155[50] = 0;
   out_3700593238552368155[51] = 0;
   out_3700593238552368155[52] = 0;
   out_3700593238552368155[53] = 0;
   out_3700593238552368155[54] = 0;
   out_3700593238552368155[55] = 0;
   out_3700593238552368155[56] = 0;
   out_3700593238552368155[57] = 0;
   out_3700593238552368155[58] = 0;
   out_3700593238552368155[59] = 0;
   out_3700593238552368155[60] = 0;
   out_3700593238552368155[61] = 0;
   out_3700593238552368155[62] = 0;
   out_3700593238552368155[63] = 0;
   out_3700593238552368155[64] = 0;
   out_3700593238552368155[65] = 0;
   out_3700593238552368155[66] = 0;
   out_3700593238552368155[67] = 0;
   out_3700593238552368155[68] = 0;
   out_3700593238552368155[69] = 0;
   out_3700593238552368155[70] = 0;
   out_3700593238552368155[71] = 0;
   out_3700593238552368155[72] = 1;
   out_3700593238552368155[73] = 0;
   out_3700593238552368155[74] = 0;
   out_3700593238552368155[75] = 0;
   out_3700593238552368155[76] = 0;
   out_3700593238552368155[77] = 0;
   out_3700593238552368155[78] = 0;
   out_3700593238552368155[79] = 0;
   out_3700593238552368155[80] = 0;
   out_3700593238552368155[81] = 0;
   out_3700593238552368155[82] = 0;
   out_3700593238552368155[83] = 0;
   out_3700593238552368155[84] = 0;
   out_3700593238552368155[85] = 0;
   out_3700593238552368155[86] = 0;
   out_3700593238552368155[87] = 0;
}
void h_13(double *state, double *unused, double *out_7377470601038055234) {
   out_7377470601038055234[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7377470601038055234[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7377470601038055234[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5643909537672020686) {
   out_5643909537672020686[0] = 0;
   out_5643909537672020686[1] = 0;
   out_5643909537672020686[2] = 0;
   out_5643909537672020686[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5643909537672020686[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5643909537672020686[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5643909537672020686[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5643909537672020686[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5643909537672020686[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5643909537672020686[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5643909537672020686[10] = 0;
   out_5643909537672020686[11] = 0;
   out_5643909537672020686[12] = 0;
   out_5643909537672020686[13] = 0;
   out_5643909537672020686[14] = 0;
   out_5643909537672020686[15] = 0;
   out_5643909537672020686[16] = 0;
   out_5643909537672020686[17] = 0;
   out_5643909537672020686[18] = 0;
   out_5643909537672020686[19] = 0;
   out_5643909537672020686[20] = 0;
   out_5643909537672020686[21] = 0;
   out_5643909537672020686[22] = 0;
   out_5643909537672020686[23] = 0;
   out_5643909537672020686[24] = 0;
   out_5643909537672020686[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5643909537672020686[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5643909537672020686[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5643909537672020686[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5643909537672020686[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5643909537672020686[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5643909537672020686[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5643909537672020686[32] = 0;
   out_5643909537672020686[33] = 0;
   out_5643909537672020686[34] = 0;
   out_5643909537672020686[35] = 0;
   out_5643909537672020686[36] = 0;
   out_5643909537672020686[37] = 0;
   out_5643909537672020686[38] = 0;
   out_5643909537672020686[39] = 0;
   out_5643909537672020686[40] = 0;
   out_5643909537672020686[41] = 0;
   out_5643909537672020686[42] = 0;
   out_5643909537672020686[43] = 0;
   out_5643909537672020686[44] = 0;
   out_5643909537672020686[45] = 0;
   out_5643909537672020686[46] = 0;
   out_5643909537672020686[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5643909537672020686[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5643909537672020686[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5643909537672020686[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5643909537672020686[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5643909537672020686[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5643909537672020686[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5643909537672020686[54] = 0;
   out_5643909537672020686[55] = 0;
   out_5643909537672020686[56] = 0;
   out_5643909537672020686[57] = 0;
   out_5643909537672020686[58] = 0;
   out_5643909537672020686[59] = 0;
   out_5643909537672020686[60] = 0;
   out_5643909537672020686[61] = 0;
   out_5643909537672020686[62] = 0;
   out_5643909537672020686[63] = 0;
   out_5643909537672020686[64] = 0;
   out_5643909537672020686[65] = 0;
}
void h_14(double *state, double *unused, double *out_7503518715580627469) {
   out_7503518715580627469[0] = state[10];
   out_7503518715580627469[1] = state[11];
   out_7503518715580627469[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7371080895162175433) {
   out_7371080895162175433[0] = 0;
   out_7371080895162175433[1] = 0;
   out_7371080895162175433[2] = 0;
   out_7371080895162175433[3] = 0;
   out_7371080895162175433[4] = 0;
   out_7371080895162175433[5] = 0;
   out_7371080895162175433[6] = 0;
   out_7371080895162175433[7] = 0;
   out_7371080895162175433[8] = 0;
   out_7371080895162175433[9] = 0;
   out_7371080895162175433[10] = 1;
   out_7371080895162175433[11] = 0;
   out_7371080895162175433[12] = 0;
   out_7371080895162175433[13] = 0;
   out_7371080895162175433[14] = 0;
   out_7371080895162175433[15] = 0;
   out_7371080895162175433[16] = 0;
   out_7371080895162175433[17] = 0;
   out_7371080895162175433[18] = 0;
   out_7371080895162175433[19] = 0;
   out_7371080895162175433[20] = 0;
   out_7371080895162175433[21] = 0;
   out_7371080895162175433[22] = 0;
   out_7371080895162175433[23] = 0;
   out_7371080895162175433[24] = 0;
   out_7371080895162175433[25] = 0;
   out_7371080895162175433[26] = 0;
   out_7371080895162175433[27] = 0;
   out_7371080895162175433[28] = 0;
   out_7371080895162175433[29] = 0;
   out_7371080895162175433[30] = 0;
   out_7371080895162175433[31] = 0;
   out_7371080895162175433[32] = 0;
   out_7371080895162175433[33] = 1;
   out_7371080895162175433[34] = 0;
   out_7371080895162175433[35] = 0;
   out_7371080895162175433[36] = 0;
   out_7371080895162175433[37] = 0;
   out_7371080895162175433[38] = 0;
   out_7371080895162175433[39] = 0;
   out_7371080895162175433[40] = 0;
   out_7371080895162175433[41] = 0;
   out_7371080895162175433[42] = 0;
   out_7371080895162175433[43] = 0;
   out_7371080895162175433[44] = 0;
   out_7371080895162175433[45] = 0;
   out_7371080895162175433[46] = 0;
   out_7371080895162175433[47] = 0;
   out_7371080895162175433[48] = 0;
   out_7371080895162175433[49] = 0;
   out_7371080895162175433[50] = 0;
   out_7371080895162175433[51] = 0;
   out_7371080895162175433[52] = 0;
   out_7371080895162175433[53] = 0;
   out_7371080895162175433[54] = 0;
   out_7371080895162175433[55] = 0;
   out_7371080895162175433[56] = 1;
   out_7371080895162175433[57] = 0;
   out_7371080895162175433[58] = 0;
   out_7371080895162175433[59] = 0;
   out_7371080895162175433[60] = 0;
   out_7371080895162175433[61] = 0;
   out_7371080895162175433[62] = 0;
   out_7371080895162175433[63] = 0;
   out_7371080895162175433[64] = 0;
   out_7371080895162175433[65] = 0;
}
void h_33(double *state, double *unused, double *out_4889766644938345450) {
   out_4889766644938345450[0] = state[16];
   out_4889766644938345450[1] = state[17];
   out_4889766644938345450[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1095051479780301098) {
   out_1095051479780301098[0] = 0;
   out_1095051479780301098[1] = 0;
   out_1095051479780301098[2] = 0;
   out_1095051479780301098[3] = 0;
   out_1095051479780301098[4] = 0;
   out_1095051479780301098[5] = 0;
   out_1095051479780301098[6] = 0;
   out_1095051479780301098[7] = 0;
   out_1095051479780301098[8] = 0;
   out_1095051479780301098[9] = 0;
   out_1095051479780301098[10] = 0;
   out_1095051479780301098[11] = 0;
   out_1095051479780301098[12] = 0;
   out_1095051479780301098[13] = 0;
   out_1095051479780301098[14] = 0;
   out_1095051479780301098[15] = 0;
   out_1095051479780301098[16] = 1;
   out_1095051479780301098[17] = 0;
   out_1095051479780301098[18] = 0;
   out_1095051479780301098[19] = 0;
   out_1095051479780301098[20] = 0;
   out_1095051479780301098[21] = 0;
   out_1095051479780301098[22] = 0;
   out_1095051479780301098[23] = 0;
   out_1095051479780301098[24] = 0;
   out_1095051479780301098[25] = 0;
   out_1095051479780301098[26] = 0;
   out_1095051479780301098[27] = 0;
   out_1095051479780301098[28] = 0;
   out_1095051479780301098[29] = 0;
   out_1095051479780301098[30] = 0;
   out_1095051479780301098[31] = 0;
   out_1095051479780301098[32] = 0;
   out_1095051479780301098[33] = 0;
   out_1095051479780301098[34] = 0;
   out_1095051479780301098[35] = 0;
   out_1095051479780301098[36] = 0;
   out_1095051479780301098[37] = 0;
   out_1095051479780301098[38] = 0;
   out_1095051479780301098[39] = 1;
   out_1095051479780301098[40] = 0;
   out_1095051479780301098[41] = 0;
   out_1095051479780301098[42] = 0;
   out_1095051479780301098[43] = 0;
   out_1095051479780301098[44] = 0;
   out_1095051479780301098[45] = 0;
   out_1095051479780301098[46] = 0;
   out_1095051479780301098[47] = 0;
   out_1095051479780301098[48] = 0;
   out_1095051479780301098[49] = 0;
   out_1095051479780301098[50] = 0;
   out_1095051479780301098[51] = 0;
   out_1095051479780301098[52] = 0;
   out_1095051479780301098[53] = 0;
   out_1095051479780301098[54] = 0;
   out_1095051479780301098[55] = 0;
   out_1095051479780301098[56] = 0;
   out_1095051479780301098[57] = 0;
   out_1095051479780301098[58] = 0;
   out_1095051479780301098[59] = 0;
   out_1095051479780301098[60] = 0;
   out_1095051479780301098[61] = 0;
   out_1095051479780301098[62] = 1;
   out_1095051479780301098[63] = 0;
   out_1095051479780301098[64] = 0;
   out_1095051479780301098[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2028871770198805139) {
  H(in_vec, out_2028871770198805139);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8151007758379062661) {
  err_fun(nom_x, delta_x, out_8151007758379062661);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2128743399615825523) {
  inv_err_fun(nom_x, true_x, out_2128743399615825523);
}
void live_H_mod_fun(double *state, double *out_6416191868946148009) {
  H_mod_fun(state, out_6416191868946148009);
}
void live_f_fun(double *state, double dt, double *out_3264604968293694097) {
  f_fun(state,  dt, out_3264604968293694097);
}
void live_F_fun(double *state, double dt, double *out_1741995097926784820) {
  F_fun(state,  dt, out_1741995097926784820);
}
void live_h_4(double *state, double *unused, double *out_6343403930864150333) {
  h_4(state, unused, out_6343403930864150333);
}
void live_H_4(double *state, double *unused, double *out_3788444243282928713) {
  H_4(state, unused, out_3788444243282928713);
}
void live_h_9(double *state, double *unused, double *out_7503518715580627469) {
  h_9(state, unused, out_7503518715580627469);
}
void live_H_9(double *state, double *unused, double *out_7371080895162175433) {
  H_9(state, unused, out_7371080895162175433);
}
void live_h_10(double *state, double *unused, double *out_8411818234095403400) {
  h_10(state, unused, out_8411818234095403400);
}
void live_H_10(double *state, double *unused, double *out_2755645111163305288) {
  H_10(state, unused, out_2755645111163305288);
}
void live_h_12(double *state, double *unused, double *out_8151414419776971058) {
  h_12(state, unused, out_8151414419776971058);
}
void live_H_12(double *state, double *unused, double *out_2592814133759804283) {
  H_12(state, unused, out_2592814133759804283);
}
void live_h_31(double *state, double *unused, double *out_6307158399764442839) {
  h_31(state, unused, out_6307158399764442839);
}
void live_H_31(double *state, double *unused, double *out_4245608484419158702) {
  H_31(state, unused, out_4245608484419158702);
}
void live_h_32(double *state, double *unused, double *out_2026782489563584114) {
  h_32(state, unused, out_2026782489563584114);
}
void live_H_32(double *state, double *unused, double *out_3700593238552368155) {
  H_32(state, unused, out_3700593238552368155);
}
void live_h_13(double *state, double *unused, double *out_7377470601038055234) {
  h_13(state, unused, out_7377470601038055234);
}
void live_H_13(double *state, double *unused, double *out_5643909537672020686) {
  H_13(state, unused, out_5643909537672020686);
}
void live_h_14(double *state, double *unused, double *out_7503518715580627469) {
  h_14(state, unused, out_7503518715580627469);
}
void live_H_14(double *state, double *unused, double *out_7371080895162175433) {
  H_14(state, unused, out_7371080895162175433);
}
void live_h_33(double *state, double *unused, double *out_4889766644938345450) {
  h_33(state, unused, out_4889766644938345450);
}
void live_H_33(double *state, double *unused, double *out_1095051479780301098) {
  H_33(state, unused, out_1095051479780301098);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
