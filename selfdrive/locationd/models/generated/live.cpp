#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_453938190038079243) {
   out_453938190038079243[0] = 0;
   out_453938190038079243[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_453938190038079243[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_453938190038079243[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_453938190038079243[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_453938190038079243[5] = -sin(in_vec[1]);
   out_453938190038079243[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_453938190038079243[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_453938190038079243[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_453938190038079243[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_453938190038079243[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_453938190038079243[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_453938190038079243[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_453938190038079243[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_453938190038079243[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_453938190038079243[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_453938190038079243[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_453938190038079243[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2158047252761075543) {
   out_2158047252761075543[0] = delta_x[0] + nom_x[0];
   out_2158047252761075543[1] = delta_x[1] + nom_x[1];
   out_2158047252761075543[2] = delta_x[2] + nom_x[2];
   out_2158047252761075543[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2158047252761075543[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2158047252761075543[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2158047252761075543[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2158047252761075543[7] = delta_x[6] + nom_x[7];
   out_2158047252761075543[8] = delta_x[7] + nom_x[8];
   out_2158047252761075543[9] = delta_x[8] + nom_x[9];
   out_2158047252761075543[10] = delta_x[9] + nom_x[10];
   out_2158047252761075543[11] = delta_x[10] + nom_x[11];
   out_2158047252761075543[12] = delta_x[11] + nom_x[12];
   out_2158047252761075543[13] = delta_x[12] + nom_x[13];
   out_2158047252761075543[14] = delta_x[13] + nom_x[14];
   out_2158047252761075543[15] = delta_x[14] + nom_x[15];
   out_2158047252761075543[16] = delta_x[15] + nom_x[16];
   out_2158047252761075543[17] = delta_x[16] + nom_x[17];
   out_2158047252761075543[18] = delta_x[17] + nom_x[18];
   out_2158047252761075543[19] = delta_x[18] + nom_x[19];
   out_2158047252761075543[20] = delta_x[19] + nom_x[20];
   out_2158047252761075543[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8734297616248117664) {
   out_8734297616248117664[0] = -nom_x[0] + true_x[0];
   out_8734297616248117664[1] = -nom_x[1] + true_x[1];
   out_8734297616248117664[2] = -nom_x[2] + true_x[2];
   out_8734297616248117664[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8734297616248117664[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8734297616248117664[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8734297616248117664[6] = -nom_x[7] + true_x[7];
   out_8734297616248117664[7] = -nom_x[8] + true_x[8];
   out_8734297616248117664[8] = -nom_x[9] + true_x[9];
   out_8734297616248117664[9] = -nom_x[10] + true_x[10];
   out_8734297616248117664[10] = -nom_x[11] + true_x[11];
   out_8734297616248117664[11] = -nom_x[12] + true_x[12];
   out_8734297616248117664[12] = -nom_x[13] + true_x[13];
   out_8734297616248117664[13] = -nom_x[14] + true_x[14];
   out_8734297616248117664[14] = -nom_x[15] + true_x[15];
   out_8734297616248117664[15] = -nom_x[16] + true_x[16];
   out_8734297616248117664[16] = -nom_x[17] + true_x[17];
   out_8734297616248117664[17] = -nom_x[18] + true_x[18];
   out_8734297616248117664[18] = -nom_x[19] + true_x[19];
   out_8734297616248117664[19] = -nom_x[20] + true_x[20];
   out_8734297616248117664[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2860066609604479351) {
   out_2860066609604479351[0] = 1.0;
   out_2860066609604479351[1] = 0.0;
   out_2860066609604479351[2] = 0.0;
   out_2860066609604479351[3] = 0.0;
   out_2860066609604479351[4] = 0.0;
   out_2860066609604479351[5] = 0.0;
   out_2860066609604479351[6] = 0.0;
   out_2860066609604479351[7] = 0.0;
   out_2860066609604479351[8] = 0.0;
   out_2860066609604479351[9] = 0.0;
   out_2860066609604479351[10] = 0.0;
   out_2860066609604479351[11] = 0.0;
   out_2860066609604479351[12] = 0.0;
   out_2860066609604479351[13] = 0.0;
   out_2860066609604479351[14] = 0.0;
   out_2860066609604479351[15] = 0.0;
   out_2860066609604479351[16] = 0.0;
   out_2860066609604479351[17] = 0.0;
   out_2860066609604479351[18] = 0.0;
   out_2860066609604479351[19] = 0.0;
   out_2860066609604479351[20] = 0.0;
   out_2860066609604479351[21] = 0.0;
   out_2860066609604479351[22] = 1.0;
   out_2860066609604479351[23] = 0.0;
   out_2860066609604479351[24] = 0.0;
   out_2860066609604479351[25] = 0.0;
   out_2860066609604479351[26] = 0.0;
   out_2860066609604479351[27] = 0.0;
   out_2860066609604479351[28] = 0.0;
   out_2860066609604479351[29] = 0.0;
   out_2860066609604479351[30] = 0.0;
   out_2860066609604479351[31] = 0.0;
   out_2860066609604479351[32] = 0.0;
   out_2860066609604479351[33] = 0.0;
   out_2860066609604479351[34] = 0.0;
   out_2860066609604479351[35] = 0.0;
   out_2860066609604479351[36] = 0.0;
   out_2860066609604479351[37] = 0.0;
   out_2860066609604479351[38] = 0.0;
   out_2860066609604479351[39] = 0.0;
   out_2860066609604479351[40] = 0.0;
   out_2860066609604479351[41] = 0.0;
   out_2860066609604479351[42] = 0.0;
   out_2860066609604479351[43] = 0.0;
   out_2860066609604479351[44] = 1.0;
   out_2860066609604479351[45] = 0.0;
   out_2860066609604479351[46] = 0.0;
   out_2860066609604479351[47] = 0.0;
   out_2860066609604479351[48] = 0.0;
   out_2860066609604479351[49] = 0.0;
   out_2860066609604479351[50] = 0.0;
   out_2860066609604479351[51] = 0.0;
   out_2860066609604479351[52] = 0.0;
   out_2860066609604479351[53] = 0.0;
   out_2860066609604479351[54] = 0.0;
   out_2860066609604479351[55] = 0.0;
   out_2860066609604479351[56] = 0.0;
   out_2860066609604479351[57] = 0.0;
   out_2860066609604479351[58] = 0.0;
   out_2860066609604479351[59] = 0.0;
   out_2860066609604479351[60] = 0.0;
   out_2860066609604479351[61] = 0.0;
   out_2860066609604479351[62] = 0.0;
   out_2860066609604479351[63] = 0.0;
   out_2860066609604479351[64] = 0.0;
   out_2860066609604479351[65] = 0.0;
   out_2860066609604479351[66] = -0.5*state[4];
   out_2860066609604479351[67] = -0.5*state[5];
   out_2860066609604479351[68] = -0.5*state[6];
   out_2860066609604479351[69] = 0.0;
   out_2860066609604479351[70] = 0.0;
   out_2860066609604479351[71] = 0.0;
   out_2860066609604479351[72] = 0.0;
   out_2860066609604479351[73] = 0.0;
   out_2860066609604479351[74] = 0.0;
   out_2860066609604479351[75] = 0.0;
   out_2860066609604479351[76] = 0.0;
   out_2860066609604479351[77] = 0.0;
   out_2860066609604479351[78] = 0.0;
   out_2860066609604479351[79] = 0.0;
   out_2860066609604479351[80] = 0.0;
   out_2860066609604479351[81] = 0.0;
   out_2860066609604479351[82] = 0.0;
   out_2860066609604479351[83] = 0.0;
   out_2860066609604479351[84] = 0.0;
   out_2860066609604479351[85] = 0.0;
   out_2860066609604479351[86] = 0.0;
   out_2860066609604479351[87] = 0.5*state[3];
   out_2860066609604479351[88] = 0.5*state[6];
   out_2860066609604479351[89] = -0.5*state[5];
   out_2860066609604479351[90] = 0.0;
   out_2860066609604479351[91] = 0.0;
   out_2860066609604479351[92] = 0.0;
   out_2860066609604479351[93] = 0.0;
   out_2860066609604479351[94] = 0.0;
   out_2860066609604479351[95] = 0.0;
   out_2860066609604479351[96] = 0.0;
   out_2860066609604479351[97] = 0.0;
   out_2860066609604479351[98] = 0.0;
   out_2860066609604479351[99] = 0.0;
   out_2860066609604479351[100] = 0.0;
   out_2860066609604479351[101] = 0.0;
   out_2860066609604479351[102] = 0.0;
   out_2860066609604479351[103] = 0.0;
   out_2860066609604479351[104] = 0.0;
   out_2860066609604479351[105] = 0.0;
   out_2860066609604479351[106] = 0.0;
   out_2860066609604479351[107] = 0.0;
   out_2860066609604479351[108] = -0.5*state[6];
   out_2860066609604479351[109] = 0.5*state[3];
   out_2860066609604479351[110] = 0.5*state[4];
   out_2860066609604479351[111] = 0.0;
   out_2860066609604479351[112] = 0.0;
   out_2860066609604479351[113] = 0.0;
   out_2860066609604479351[114] = 0.0;
   out_2860066609604479351[115] = 0.0;
   out_2860066609604479351[116] = 0.0;
   out_2860066609604479351[117] = 0.0;
   out_2860066609604479351[118] = 0.0;
   out_2860066609604479351[119] = 0.0;
   out_2860066609604479351[120] = 0.0;
   out_2860066609604479351[121] = 0.0;
   out_2860066609604479351[122] = 0.0;
   out_2860066609604479351[123] = 0.0;
   out_2860066609604479351[124] = 0.0;
   out_2860066609604479351[125] = 0.0;
   out_2860066609604479351[126] = 0.0;
   out_2860066609604479351[127] = 0.0;
   out_2860066609604479351[128] = 0.0;
   out_2860066609604479351[129] = 0.5*state[5];
   out_2860066609604479351[130] = -0.5*state[4];
   out_2860066609604479351[131] = 0.5*state[3];
   out_2860066609604479351[132] = 0.0;
   out_2860066609604479351[133] = 0.0;
   out_2860066609604479351[134] = 0.0;
   out_2860066609604479351[135] = 0.0;
   out_2860066609604479351[136] = 0.0;
   out_2860066609604479351[137] = 0.0;
   out_2860066609604479351[138] = 0.0;
   out_2860066609604479351[139] = 0.0;
   out_2860066609604479351[140] = 0.0;
   out_2860066609604479351[141] = 0.0;
   out_2860066609604479351[142] = 0.0;
   out_2860066609604479351[143] = 0.0;
   out_2860066609604479351[144] = 0.0;
   out_2860066609604479351[145] = 0.0;
   out_2860066609604479351[146] = 0.0;
   out_2860066609604479351[147] = 0.0;
   out_2860066609604479351[148] = 0.0;
   out_2860066609604479351[149] = 0.0;
   out_2860066609604479351[150] = 0.0;
   out_2860066609604479351[151] = 0.0;
   out_2860066609604479351[152] = 0.0;
   out_2860066609604479351[153] = 1.0;
   out_2860066609604479351[154] = 0.0;
   out_2860066609604479351[155] = 0.0;
   out_2860066609604479351[156] = 0.0;
   out_2860066609604479351[157] = 0.0;
   out_2860066609604479351[158] = 0.0;
   out_2860066609604479351[159] = 0.0;
   out_2860066609604479351[160] = 0.0;
   out_2860066609604479351[161] = 0.0;
   out_2860066609604479351[162] = 0.0;
   out_2860066609604479351[163] = 0.0;
   out_2860066609604479351[164] = 0.0;
   out_2860066609604479351[165] = 0.0;
   out_2860066609604479351[166] = 0.0;
   out_2860066609604479351[167] = 0.0;
   out_2860066609604479351[168] = 0.0;
   out_2860066609604479351[169] = 0.0;
   out_2860066609604479351[170] = 0.0;
   out_2860066609604479351[171] = 0.0;
   out_2860066609604479351[172] = 0.0;
   out_2860066609604479351[173] = 0.0;
   out_2860066609604479351[174] = 0.0;
   out_2860066609604479351[175] = 1.0;
   out_2860066609604479351[176] = 0.0;
   out_2860066609604479351[177] = 0.0;
   out_2860066609604479351[178] = 0.0;
   out_2860066609604479351[179] = 0.0;
   out_2860066609604479351[180] = 0.0;
   out_2860066609604479351[181] = 0.0;
   out_2860066609604479351[182] = 0.0;
   out_2860066609604479351[183] = 0.0;
   out_2860066609604479351[184] = 0.0;
   out_2860066609604479351[185] = 0.0;
   out_2860066609604479351[186] = 0.0;
   out_2860066609604479351[187] = 0.0;
   out_2860066609604479351[188] = 0.0;
   out_2860066609604479351[189] = 0.0;
   out_2860066609604479351[190] = 0.0;
   out_2860066609604479351[191] = 0.0;
   out_2860066609604479351[192] = 0.0;
   out_2860066609604479351[193] = 0.0;
   out_2860066609604479351[194] = 0.0;
   out_2860066609604479351[195] = 0.0;
   out_2860066609604479351[196] = 0.0;
   out_2860066609604479351[197] = 1.0;
   out_2860066609604479351[198] = 0.0;
   out_2860066609604479351[199] = 0.0;
   out_2860066609604479351[200] = 0.0;
   out_2860066609604479351[201] = 0.0;
   out_2860066609604479351[202] = 0.0;
   out_2860066609604479351[203] = 0.0;
   out_2860066609604479351[204] = 0.0;
   out_2860066609604479351[205] = 0.0;
   out_2860066609604479351[206] = 0.0;
   out_2860066609604479351[207] = 0.0;
   out_2860066609604479351[208] = 0.0;
   out_2860066609604479351[209] = 0.0;
   out_2860066609604479351[210] = 0.0;
   out_2860066609604479351[211] = 0.0;
   out_2860066609604479351[212] = 0.0;
   out_2860066609604479351[213] = 0.0;
   out_2860066609604479351[214] = 0.0;
   out_2860066609604479351[215] = 0.0;
   out_2860066609604479351[216] = 0.0;
   out_2860066609604479351[217] = 0.0;
   out_2860066609604479351[218] = 0.0;
   out_2860066609604479351[219] = 1.0;
   out_2860066609604479351[220] = 0.0;
   out_2860066609604479351[221] = 0.0;
   out_2860066609604479351[222] = 0.0;
   out_2860066609604479351[223] = 0.0;
   out_2860066609604479351[224] = 0.0;
   out_2860066609604479351[225] = 0.0;
   out_2860066609604479351[226] = 0.0;
   out_2860066609604479351[227] = 0.0;
   out_2860066609604479351[228] = 0.0;
   out_2860066609604479351[229] = 0.0;
   out_2860066609604479351[230] = 0.0;
   out_2860066609604479351[231] = 0.0;
   out_2860066609604479351[232] = 0.0;
   out_2860066609604479351[233] = 0.0;
   out_2860066609604479351[234] = 0.0;
   out_2860066609604479351[235] = 0.0;
   out_2860066609604479351[236] = 0.0;
   out_2860066609604479351[237] = 0.0;
   out_2860066609604479351[238] = 0.0;
   out_2860066609604479351[239] = 0.0;
   out_2860066609604479351[240] = 0.0;
   out_2860066609604479351[241] = 1.0;
   out_2860066609604479351[242] = 0.0;
   out_2860066609604479351[243] = 0.0;
   out_2860066609604479351[244] = 0.0;
   out_2860066609604479351[245] = 0.0;
   out_2860066609604479351[246] = 0.0;
   out_2860066609604479351[247] = 0.0;
   out_2860066609604479351[248] = 0.0;
   out_2860066609604479351[249] = 0.0;
   out_2860066609604479351[250] = 0.0;
   out_2860066609604479351[251] = 0.0;
   out_2860066609604479351[252] = 0.0;
   out_2860066609604479351[253] = 0.0;
   out_2860066609604479351[254] = 0.0;
   out_2860066609604479351[255] = 0.0;
   out_2860066609604479351[256] = 0.0;
   out_2860066609604479351[257] = 0.0;
   out_2860066609604479351[258] = 0.0;
   out_2860066609604479351[259] = 0.0;
   out_2860066609604479351[260] = 0.0;
   out_2860066609604479351[261] = 0.0;
   out_2860066609604479351[262] = 0.0;
   out_2860066609604479351[263] = 1.0;
   out_2860066609604479351[264] = 0.0;
   out_2860066609604479351[265] = 0.0;
   out_2860066609604479351[266] = 0.0;
   out_2860066609604479351[267] = 0.0;
   out_2860066609604479351[268] = 0.0;
   out_2860066609604479351[269] = 0.0;
   out_2860066609604479351[270] = 0.0;
   out_2860066609604479351[271] = 0.0;
   out_2860066609604479351[272] = 0.0;
   out_2860066609604479351[273] = 0.0;
   out_2860066609604479351[274] = 0.0;
   out_2860066609604479351[275] = 0.0;
   out_2860066609604479351[276] = 0.0;
   out_2860066609604479351[277] = 0.0;
   out_2860066609604479351[278] = 0.0;
   out_2860066609604479351[279] = 0.0;
   out_2860066609604479351[280] = 0.0;
   out_2860066609604479351[281] = 0.0;
   out_2860066609604479351[282] = 0.0;
   out_2860066609604479351[283] = 0.0;
   out_2860066609604479351[284] = 0.0;
   out_2860066609604479351[285] = 1.0;
   out_2860066609604479351[286] = 0.0;
   out_2860066609604479351[287] = 0.0;
   out_2860066609604479351[288] = 0.0;
   out_2860066609604479351[289] = 0.0;
   out_2860066609604479351[290] = 0.0;
   out_2860066609604479351[291] = 0.0;
   out_2860066609604479351[292] = 0.0;
   out_2860066609604479351[293] = 0.0;
   out_2860066609604479351[294] = 0.0;
   out_2860066609604479351[295] = 0.0;
   out_2860066609604479351[296] = 0.0;
   out_2860066609604479351[297] = 0.0;
   out_2860066609604479351[298] = 0.0;
   out_2860066609604479351[299] = 0.0;
   out_2860066609604479351[300] = 0.0;
   out_2860066609604479351[301] = 0.0;
   out_2860066609604479351[302] = 0.0;
   out_2860066609604479351[303] = 0.0;
   out_2860066609604479351[304] = 0.0;
   out_2860066609604479351[305] = 0.0;
   out_2860066609604479351[306] = 0.0;
   out_2860066609604479351[307] = 1.0;
   out_2860066609604479351[308] = 0.0;
   out_2860066609604479351[309] = 0.0;
   out_2860066609604479351[310] = 0.0;
   out_2860066609604479351[311] = 0.0;
   out_2860066609604479351[312] = 0.0;
   out_2860066609604479351[313] = 0.0;
   out_2860066609604479351[314] = 0.0;
   out_2860066609604479351[315] = 0.0;
   out_2860066609604479351[316] = 0.0;
   out_2860066609604479351[317] = 0.0;
   out_2860066609604479351[318] = 0.0;
   out_2860066609604479351[319] = 0.0;
   out_2860066609604479351[320] = 0.0;
   out_2860066609604479351[321] = 0.0;
   out_2860066609604479351[322] = 0.0;
   out_2860066609604479351[323] = 0.0;
   out_2860066609604479351[324] = 0.0;
   out_2860066609604479351[325] = 0.0;
   out_2860066609604479351[326] = 0.0;
   out_2860066609604479351[327] = 0.0;
   out_2860066609604479351[328] = 0.0;
   out_2860066609604479351[329] = 1.0;
   out_2860066609604479351[330] = 0.0;
   out_2860066609604479351[331] = 0.0;
   out_2860066609604479351[332] = 0.0;
   out_2860066609604479351[333] = 0.0;
   out_2860066609604479351[334] = 0.0;
   out_2860066609604479351[335] = 0.0;
   out_2860066609604479351[336] = 0.0;
   out_2860066609604479351[337] = 0.0;
   out_2860066609604479351[338] = 0.0;
   out_2860066609604479351[339] = 0.0;
   out_2860066609604479351[340] = 0.0;
   out_2860066609604479351[341] = 0.0;
   out_2860066609604479351[342] = 0.0;
   out_2860066609604479351[343] = 0.0;
   out_2860066609604479351[344] = 0.0;
   out_2860066609604479351[345] = 0.0;
   out_2860066609604479351[346] = 0.0;
   out_2860066609604479351[347] = 0.0;
   out_2860066609604479351[348] = 0.0;
   out_2860066609604479351[349] = 0.0;
   out_2860066609604479351[350] = 0.0;
   out_2860066609604479351[351] = 1.0;
   out_2860066609604479351[352] = 0.0;
   out_2860066609604479351[353] = 0.0;
   out_2860066609604479351[354] = 0.0;
   out_2860066609604479351[355] = 0.0;
   out_2860066609604479351[356] = 0.0;
   out_2860066609604479351[357] = 0.0;
   out_2860066609604479351[358] = 0.0;
   out_2860066609604479351[359] = 0.0;
   out_2860066609604479351[360] = 0.0;
   out_2860066609604479351[361] = 0.0;
   out_2860066609604479351[362] = 0.0;
   out_2860066609604479351[363] = 0.0;
   out_2860066609604479351[364] = 0.0;
   out_2860066609604479351[365] = 0.0;
   out_2860066609604479351[366] = 0.0;
   out_2860066609604479351[367] = 0.0;
   out_2860066609604479351[368] = 0.0;
   out_2860066609604479351[369] = 0.0;
   out_2860066609604479351[370] = 0.0;
   out_2860066609604479351[371] = 0.0;
   out_2860066609604479351[372] = 0.0;
   out_2860066609604479351[373] = 1.0;
   out_2860066609604479351[374] = 0.0;
   out_2860066609604479351[375] = 0.0;
   out_2860066609604479351[376] = 0.0;
   out_2860066609604479351[377] = 0.0;
   out_2860066609604479351[378] = 0.0;
   out_2860066609604479351[379] = 0.0;
   out_2860066609604479351[380] = 0.0;
   out_2860066609604479351[381] = 0.0;
   out_2860066609604479351[382] = 0.0;
   out_2860066609604479351[383] = 0.0;
   out_2860066609604479351[384] = 0.0;
   out_2860066609604479351[385] = 0.0;
   out_2860066609604479351[386] = 0.0;
   out_2860066609604479351[387] = 0.0;
   out_2860066609604479351[388] = 0.0;
   out_2860066609604479351[389] = 0.0;
   out_2860066609604479351[390] = 0.0;
   out_2860066609604479351[391] = 0.0;
   out_2860066609604479351[392] = 0.0;
   out_2860066609604479351[393] = 0.0;
   out_2860066609604479351[394] = 0.0;
   out_2860066609604479351[395] = 1.0;
   out_2860066609604479351[396] = 0.0;
   out_2860066609604479351[397] = 0.0;
   out_2860066609604479351[398] = 0.0;
   out_2860066609604479351[399] = 0.0;
   out_2860066609604479351[400] = 0.0;
   out_2860066609604479351[401] = 0.0;
   out_2860066609604479351[402] = 0.0;
   out_2860066609604479351[403] = 0.0;
   out_2860066609604479351[404] = 0.0;
   out_2860066609604479351[405] = 0.0;
   out_2860066609604479351[406] = 0.0;
   out_2860066609604479351[407] = 0.0;
   out_2860066609604479351[408] = 0.0;
   out_2860066609604479351[409] = 0.0;
   out_2860066609604479351[410] = 0.0;
   out_2860066609604479351[411] = 0.0;
   out_2860066609604479351[412] = 0.0;
   out_2860066609604479351[413] = 0.0;
   out_2860066609604479351[414] = 0.0;
   out_2860066609604479351[415] = 0.0;
   out_2860066609604479351[416] = 0.0;
   out_2860066609604479351[417] = 1.0;
   out_2860066609604479351[418] = 0.0;
   out_2860066609604479351[419] = 0.0;
   out_2860066609604479351[420] = 0.0;
   out_2860066609604479351[421] = 0.0;
   out_2860066609604479351[422] = 0.0;
   out_2860066609604479351[423] = 0.0;
   out_2860066609604479351[424] = 0.0;
   out_2860066609604479351[425] = 0.0;
   out_2860066609604479351[426] = 0.0;
   out_2860066609604479351[427] = 0.0;
   out_2860066609604479351[428] = 0.0;
   out_2860066609604479351[429] = 0.0;
   out_2860066609604479351[430] = 0.0;
   out_2860066609604479351[431] = 0.0;
   out_2860066609604479351[432] = 0.0;
   out_2860066609604479351[433] = 0.0;
   out_2860066609604479351[434] = 0.0;
   out_2860066609604479351[435] = 0.0;
   out_2860066609604479351[436] = 0.0;
   out_2860066609604479351[437] = 0.0;
   out_2860066609604479351[438] = 0.0;
   out_2860066609604479351[439] = 1.0;
   out_2860066609604479351[440] = 0.0;
   out_2860066609604479351[441] = 0.0;
   out_2860066609604479351[442] = 0.0;
   out_2860066609604479351[443] = 0.0;
   out_2860066609604479351[444] = 0.0;
   out_2860066609604479351[445] = 0.0;
   out_2860066609604479351[446] = 0.0;
   out_2860066609604479351[447] = 0.0;
   out_2860066609604479351[448] = 0.0;
   out_2860066609604479351[449] = 0.0;
   out_2860066609604479351[450] = 0.0;
   out_2860066609604479351[451] = 0.0;
   out_2860066609604479351[452] = 0.0;
   out_2860066609604479351[453] = 0.0;
   out_2860066609604479351[454] = 0.0;
   out_2860066609604479351[455] = 0.0;
   out_2860066609604479351[456] = 0.0;
   out_2860066609604479351[457] = 0.0;
   out_2860066609604479351[458] = 0.0;
   out_2860066609604479351[459] = 0.0;
   out_2860066609604479351[460] = 0.0;
   out_2860066609604479351[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5602464115310423705) {
   out_5602464115310423705[0] = dt*state[7] + state[0];
   out_5602464115310423705[1] = dt*state[8] + state[1];
   out_5602464115310423705[2] = dt*state[9] + state[2];
   out_5602464115310423705[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5602464115310423705[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5602464115310423705[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5602464115310423705[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5602464115310423705[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5602464115310423705[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5602464115310423705[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5602464115310423705[10] = state[10];
   out_5602464115310423705[11] = state[11];
   out_5602464115310423705[12] = state[12];
   out_5602464115310423705[13] = state[13];
   out_5602464115310423705[14] = state[14];
   out_5602464115310423705[15] = state[15];
   out_5602464115310423705[16] = state[16];
   out_5602464115310423705[17] = state[17];
   out_5602464115310423705[18] = state[18];
   out_5602464115310423705[19] = state[19];
   out_5602464115310423705[20] = state[20];
   out_5602464115310423705[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6916573737423352276) {
   out_6916573737423352276[0] = 1;
   out_6916573737423352276[1] = 0;
   out_6916573737423352276[2] = 0;
   out_6916573737423352276[3] = 0;
   out_6916573737423352276[4] = 0;
   out_6916573737423352276[5] = 0;
   out_6916573737423352276[6] = dt;
   out_6916573737423352276[7] = 0;
   out_6916573737423352276[8] = 0;
   out_6916573737423352276[9] = 0;
   out_6916573737423352276[10] = 0;
   out_6916573737423352276[11] = 0;
   out_6916573737423352276[12] = 0;
   out_6916573737423352276[13] = 0;
   out_6916573737423352276[14] = 0;
   out_6916573737423352276[15] = 0;
   out_6916573737423352276[16] = 0;
   out_6916573737423352276[17] = 0;
   out_6916573737423352276[18] = 0;
   out_6916573737423352276[19] = 0;
   out_6916573737423352276[20] = 0;
   out_6916573737423352276[21] = 0;
   out_6916573737423352276[22] = 1;
   out_6916573737423352276[23] = 0;
   out_6916573737423352276[24] = 0;
   out_6916573737423352276[25] = 0;
   out_6916573737423352276[26] = 0;
   out_6916573737423352276[27] = 0;
   out_6916573737423352276[28] = dt;
   out_6916573737423352276[29] = 0;
   out_6916573737423352276[30] = 0;
   out_6916573737423352276[31] = 0;
   out_6916573737423352276[32] = 0;
   out_6916573737423352276[33] = 0;
   out_6916573737423352276[34] = 0;
   out_6916573737423352276[35] = 0;
   out_6916573737423352276[36] = 0;
   out_6916573737423352276[37] = 0;
   out_6916573737423352276[38] = 0;
   out_6916573737423352276[39] = 0;
   out_6916573737423352276[40] = 0;
   out_6916573737423352276[41] = 0;
   out_6916573737423352276[42] = 0;
   out_6916573737423352276[43] = 0;
   out_6916573737423352276[44] = 1;
   out_6916573737423352276[45] = 0;
   out_6916573737423352276[46] = 0;
   out_6916573737423352276[47] = 0;
   out_6916573737423352276[48] = 0;
   out_6916573737423352276[49] = 0;
   out_6916573737423352276[50] = dt;
   out_6916573737423352276[51] = 0;
   out_6916573737423352276[52] = 0;
   out_6916573737423352276[53] = 0;
   out_6916573737423352276[54] = 0;
   out_6916573737423352276[55] = 0;
   out_6916573737423352276[56] = 0;
   out_6916573737423352276[57] = 0;
   out_6916573737423352276[58] = 0;
   out_6916573737423352276[59] = 0;
   out_6916573737423352276[60] = 0;
   out_6916573737423352276[61] = 0;
   out_6916573737423352276[62] = 0;
   out_6916573737423352276[63] = 0;
   out_6916573737423352276[64] = 0;
   out_6916573737423352276[65] = 0;
   out_6916573737423352276[66] = 1;
   out_6916573737423352276[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6916573737423352276[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6916573737423352276[69] = 0;
   out_6916573737423352276[70] = 0;
   out_6916573737423352276[71] = 0;
   out_6916573737423352276[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6916573737423352276[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6916573737423352276[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6916573737423352276[75] = 0;
   out_6916573737423352276[76] = 0;
   out_6916573737423352276[77] = 0;
   out_6916573737423352276[78] = 0;
   out_6916573737423352276[79] = 0;
   out_6916573737423352276[80] = 0;
   out_6916573737423352276[81] = 0;
   out_6916573737423352276[82] = 0;
   out_6916573737423352276[83] = 0;
   out_6916573737423352276[84] = 0;
   out_6916573737423352276[85] = 0;
   out_6916573737423352276[86] = 0;
   out_6916573737423352276[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6916573737423352276[88] = 1;
   out_6916573737423352276[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6916573737423352276[90] = 0;
   out_6916573737423352276[91] = 0;
   out_6916573737423352276[92] = 0;
   out_6916573737423352276[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6916573737423352276[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6916573737423352276[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6916573737423352276[96] = 0;
   out_6916573737423352276[97] = 0;
   out_6916573737423352276[98] = 0;
   out_6916573737423352276[99] = 0;
   out_6916573737423352276[100] = 0;
   out_6916573737423352276[101] = 0;
   out_6916573737423352276[102] = 0;
   out_6916573737423352276[103] = 0;
   out_6916573737423352276[104] = 0;
   out_6916573737423352276[105] = 0;
   out_6916573737423352276[106] = 0;
   out_6916573737423352276[107] = 0;
   out_6916573737423352276[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6916573737423352276[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6916573737423352276[110] = 1;
   out_6916573737423352276[111] = 0;
   out_6916573737423352276[112] = 0;
   out_6916573737423352276[113] = 0;
   out_6916573737423352276[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6916573737423352276[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6916573737423352276[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6916573737423352276[117] = 0;
   out_6916573737423352276[118] = 0;
   out_6916573737423352276[119] = 0;
   out_6916573737423352276[120] = 0;
   out_6916573737423352276[121] = 0;
   out_6916573737423352276[122] = 0;
   out_6916573737423352276[123] = 0;
   out_6916573737423352276[124] = 0;
   out_6916573737423352276[125] = 0;
   out_6916573737423352276[126] = 0;
   out_6916573737423352276[127] = 0;
   out_6916573737423352276[128] = 0;
   out_6916573737423352276[129] = 0;
   out_6916573737423352276[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6916573737423352276[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6916573737423352276[132] = 1;
   out_6916573737423352276[133] = 0;
   out_6916573737423352276[134] = 0;
   out_6916573737423352276[135] = 0;
   out_6916573737423352276[136] = 0;
   out_6916573737423352276[137] = 0;
   out_6916573737423352276[138] = 0;
   out_6916573737423352276[139] = 0;
   out_6916573737423352276[140] = 0;
   out_6916573737423352276[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6916573737423352276[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6916573737423352276[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6916573737423352276[144] = 0;
   out_6916573737423352276[145] = 0;
   out_6916573737423352276[146] = 0;
   out_6916573737423352276[147] = 0;
   out_6916573737423352276[148] = 0;
   out_6916573737423352276[149] = 0;
   out_6916573737423352276[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6916573737423352276[151] = 0;
   out_6916573737423352276[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6916573737423352276[153] = 0;
   out_6916573737423352276[154] = 1;
   out_6916573737423352276[155] = 0;
   out_6916573737423352276[156] = 0;
   out_6916573737423352276[157] = 0;
   out_6916573737423352276[158] = 0;
   out_6916573737423352276[159] = 0;
   out_6916573737423352276[160] = 0;
   out_6916573737423352276[161] = 0;
   out_6916573737423352276[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6916573737423352276[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6916573737423352276[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6916573737423352276[165] = 0;
   out_6916573737423352276[166] = 0;
   out_6916573737423352276[167] = 0;
   out_6916573737423352276[168] = 0;
   out_6916573737423352276[169] = 0;
   out_6916573737423352276[170] = 0;
   out_6916573737423352276[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6916573737423352276[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6916573737423352276[173] = 0;
   out_6916573737423352276[174] = 0;
   out_6916573737423352276[175] = 0;
   out_6916573737423352276[176] = 1;
   out_6916573737423352276[177] = 0;
   out_6916573737423352276[178] = 0;
   out_6916573737423352276[179] = 0;
   out_6916573737423352276[180] = 0;
   out_6916573737423352276[181] = 0;
   out_6916573737423352276[182] = 0;
   out_6916573737423352276[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6916573737423352276[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6916573737423352276[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6916573737423352276[186] = 0;
   out_6916573737423352276[187] = 0;
   out_6916573737423352276[188] = 0;
   out_6916573737423352276[189] = 0;
   out_6916573737423352276[190] = 0;
   out_6916573737423352276[191] = 0;
   out_6916573737423352276[192] = 0;
   out_6916573737423352276[193] = 0;
   out_6916573737423352276[194] = 0;
   out_6916573737423352276[195] = 0;
   out_6916573737423352276[196] = 0;
   out_6916573737423352276[197] = 0;
   out_6916573737423352276[198] = 1;
   out_6916573737423352276[199] = 0;
   out_6916573737423352276[200] = 0;
   out_6916573737423352276[201] = 0;
   out_6916573737423352276[202] = 0;
   out_6916573737423352276[203] = 0;
   out_6916573737423352276[204] = 0;
   out_6916573737423352276[205] = 0;
   out_6916573737423352276[206] = 0;
   out_6916573737423352276[207] = 0;
   out_6916573737423352276[208] = 0;
   out_6916573737423352276[209] = 0;
   out_6916573737423352276[210] = 0;
   out_6916573737423352276[211] = 0;
   out_6916573737423352276[212] = 0;
   out_6916573737423352276[213] = 0;
   out_6916573737423352276[214] = 0;
   out_6916573737423352276[215] = 0;
   out_6916573737423352276[216] = 0;
   out_6916573737423352276[217] = 0;
   out_6916573737423352276[218] = 0;
   out_6916573737423352276[219] = 0;
   out_6916573737423352276[220] = 1;
   out_6916573737423352276[221] = 0;
   out_6916573737423352276[222] = 0;
   out_6916573737423352276[223] = 0;
   out_6916573737423352276[224] = 0;
   out_6916573737423352276[225] = 0;
   out_6916573737423352276[226] = 0;
   out_6916573737423352276[227] = 0;
   out_6916573737423352276[228] = 0;
   out_6916573737423352276[229] = 0;
   out_6916573737423352276[230] = 0;
   out_6916573737423352276[231] = 0;
   out_6916573737423352276[232] = 0;
   out_6916573737423352276[233] = 0;
   out_6916573737423352276[234] = 0;
   out_6916573737423352276[235] = 0;
   out_6916573737423352276[236] = 0;
   out_6916573737423352276[237] = 0;
   out_6916573737423352276[238] = 0;
   out_6916573737423352276[239] = 0;
   out_6916573737423352276[240] = 0;
   out_6916573737423352276[241] = 0;
   out_6916573737423352276[242] = 1;
   out_6916573737423352276[243] = 0;
   out_6916573737423352276[244] = 0;
   out_6916573737423352276[245] = 0;
   out_6916573737423352276[246] = 0;
   out_6916573737423352276[247] = 0;
   out_6916573737423352276[248] = 0;
   out_6916573737423352276[249] = 0;
   out_6916573737423352276[250] = 0;
   out_6916573737423352276[251] = 0;
   out_6916573737423352276[252] = 0;
   out_6916573737423352276[253] = 0;
   out_6916573737423352276[254] = 0;
   out_6916573737423352276[255] = 0;
   out_6916573737423352276[256] = 0;
   out_6916573737423352276[257] = 0;
   out_6916573737423352276[258] = 0;
   out_6916573737423352276[259] = 0;
   out_6916573737423352276[260] = 0;
   out_6916573737423352276[261] = 0;
   out_6916573737423352276[262] = 0;
   out_6916573737423352276[263] = 0;
   out_6916573737423352276[264] = 1;
   out_6916573737423352276[265] = 0;
   out_6916573737423352276[266] = 0;
   out_6916573737423352276[267] = 0;
   out_6916573737423352276[268] = 0;
   out_6916573737423352276[269] = 0;
   out_6916573737423352276[270] = 0;
   out_6916573737423352276[271] = 0;
   out_6916573737423352276[272] = 0;
   out_6916573737423352276[273] = 0;
   out_6916573737423352276[274] = 0;
   out_6916573737423352276[275] = 0;
   out_6916573737423352276[276] = 0;
   out_6916573737423352276[277] = 0;
   out_6916573737423352276[278] = 0;
   out_6916573737423352276[279] = 0;
   out_6916573737423352276[280] = 0;
   out_6916573737423352276[281] = 0;
   out_6916573737423352276[282] = 0;
   out_6916573737423352276[283] = 0;
   out_6916573737423352276[284] = 0;
   out_6916573737423352276[285] = 0;
   out_6916573737423352276[286] = 1;
   out_6916573737423352276[287] = 0;
   out_6916573737423352276[288] = 0;
   out_6916573737423352276[289] = 0;
   out_6916573737423352276[290] = 0;
   out_6916573737423352276[291] = 0;
   out_6916573737423352276[292] = 0;
   out_6916573737423352276[293] = 0;
   out_6916573737423352276[294] = 0;
   out_6916573737423352276[295] = 0;
   out_6916573737423352276[296] = 0;
   out_6916573737423352276[297] = 0;
   out_6916573737423352276[298] = 0;
   out_6916573737423352276[299] = 0;
   out_6916573737423352276[300] = 0;
   out_6916573737423352276[301] = 0;
   out_6916573737423352276[302] = 0;
   out_6916573737423352276[303] = 0;
   out_6916573737423352276[304] = 0;
   out_6916573737423352276[305] = 0;
   out_6916573737423352276[306] = 0;
   out_6916573737423352276[307] = 0;
   out_6916573737423352276[308] = 1;
   out_6916573737423352276[309] = 0;
   out_6916573737423352276[310] = 0;
   out_6916573737423352276[311] = 0;
   out_6916573737423352276[312] = 0;
   out_6916573737423352276[313] = 0;
   out_6916573737423352276[314] = 0;
   out_6916573737423352276[315] = 0;
   out_6916573737423352276[316] = 0;
   out_6916573737423352276[317] = 0;
   out_6916573737423352276[318] = 0;
   out_6916573737423352276[319] = 0;
   out_6916573737423352276[320] = 0;
   out_6916573737423352276[321] = 0;
   out_6916573737423352276[322] = 0;
   out_6916573737423352276[323] = 0;
   out_6916573737423352276[324] = 0;
   out_6916573737423352276[325] = 0;
   out_6916573737423352276[326] = 0;
   out_6916573737423352276[327] = 0;
   out_6916573737423352276[328] = 0;
   out_6916573737423352276[329] = 0;
   out_6916573737423352276[330] = 1;
   out_6916573737423352276[331] = 0;
   out_6916573737423352276[332] = 0;
   out_6916573737423352276[333] = 0;
   out_6916573737423352276[334] = 0;
   out_6916573737423352276[335] = 0;
   out_6916573737423352276[336] = 0;
   out_6916573737423352276[337] = 0;
   out_6916573737423352276[338] = 0;
   out_6916573737423352276[339] = 0;
   out_6916573737423352276[340] = 0;
   out_6916573737423352276[341] = 0;
   out_6916573737423352276[342] = 0;
   out_6916573737423352276[343] = 0;
   out_6916573737423352276[344] = 0;
   out_6916573737423352276[345] = 0;
   out_6916573737423352276[346] = 0;
   out_6916573737423352276[347] = 0;
   out_6916573737423352276[348] = 0;
   out_6916573737423352276[349] = 0;
   out_6916573737423352276[350] = 0;
   out_6916573737423352276[351] = 0;
   out_6916573737423352276[352] = 1;
   out_6916573737423352276[353] = 0;
   out_6916573737423352276[354] = 0;
   out_6916573737423352276[355] = 0;
   out_6916573737423352276[356] = 0;
   out_6916573737423352276[357] = 0;
   out_6916573737423352276[358] = 0;
   out_6916573737423352276[359] = 0;
   out_6916573737423352276[360] = 0;
   out_6916573737423352276[361] = 0;
   out_6916573737423352276[362] = 0;
   out_6916573737423352276[363] = 0;
   out_6916573737423352276[364] = 0;
   out_6916573737423352276[365] = 0;
   out_6916573737423352276[366] = 0;
   out_6916573737423352276[367] = 0;
   out_6916573737423352276[368] = 0;
   out_6916573737423352276[369] = 0;
   out_6916573737423352276[370] = 0;
   out_6916573737423352276[371] = 0;
   out_6916573737423352276[372] = 0;
   out_6916573737423352276[373] = 0;
   out_6916573737423352276[374] = 1;
   out_6916573737423352276[375] = 0;
   out_6916573737423352276[376] = 0;
   out_6916573737423352276[377] = 0;
   out_6916573737423352276[378] = 0;
   out_6916573737423352276[379] = 0;
   out_6916573737423352276[380] = 0;
   out_6916573737423352276[381] = 0;
   out_6916573737423352276[382] = 0;
   out_6916573737423352276[383] = 0;
   out_6916573737423352276[384] = 0;
   out_6916573737423352276[385] = 0;
   out_6916573737423352276[386] = 0;
   out_6916573737423352276[387] = 0;
   out_6916573737423352276[388] = 0;
   out_6916573737423352276[389] = 0;
   out_6916573737423352276[390] = 0;
   out_6916573737423352276[391] = 0;
   out_6916573737423352276[392] = 0;
   out_6916573737423352276[393] = 0;
   out_6916573737423352276[394] = 0;
   out_6916573737423352276[395] = 0;
   out_6916573737423352276[396] = 1;
   out_6916573737423352276[397] = 0;
   out_6916573737423352276[398] = 0;
   out_6916573737423352276[399] = 0;
   out_6916573737423352276[400] = 0;
   out_6916573737423352276[401] = 0;
   out_6916573737423352276[402] = 0;
   out_6916573737423352276[403] = 0;
   out_6916573737423352276[404] = 0;
   out_6916573737423352276[405] = 0;
   out_6916573737423352276[406] = 0;
   out_6916573737423352276[407] = 0;
   out_6916573737423352276[408] = 0;
   out_6916573737423352276[409] = 0;
   out_6916573737423352276[410] = 0;
   out_6916573737423352276[411] = 0;
   out_6916573737423352276[412] = 0;
   out_6916573737423352276[413] = 0;
   out_6916573737423352276[414] = 0;
   out_6916573737423352276[415] = 0;
   out_6916573737423352276[416] = 0;
   out_6916573737423352276[417] = 0;
   out_6916573737423352276[418] = 1;
   out_6916573737423352276[419] = 0;
   out_6916573737423352276[420] = 0;
   out_6916573737423352276[421] = 0;
   out_6916573737423352276[422] = 0;
   out_6916573737423352276[423] = 0;
   out_6916573737423352276[424] = 0;
   out_6916573737423352276[425] = 0;
   out_6916573737423352276[426] = 0;
   out_6916573737423352276[427] = 0;
   out_6916573737423352276[428] = 0;
   out_6916573737423352276[429] = 0;
   out_6916573737423352276[430] = 0;
   out_6916573737423352276[431] = 0;
   out_6916573737423352276[432] = 0;
   out_6916573737423352276[433] = 0;
   out_6916573737423352276[434] = 0;
   out_6916573737423352276[435] = 0;
   out_6916573737423352276[436] = 0;
   out_6916573737423352276[437] = 0;
   out_6916573737423352276[438] = 0;
   out_6916573737423352276[439] = 0;
   out_6916573737423352276[440] = 1;
}
void h_4(double *state, double *unused, double *out_596332248622237516) {
   out_596332248622237516[0] = state[10] + state[13];
   out_596332248622237516[1] = state[11] + state[14];
   out_596332248622237516[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4979886627124493108) {
   out_4979886627124493108[0] = 0;
   out_4979886627124493108[1] = 0;
   out_4979886627124493108[2] = 0;
   out_4979886627124493108[3] = 0;
   out_4979886627124493108[4] = 0;
   out_4979886627124493108[5] = 0;
   out_4979886627124493108[6] = 0;
   out_4979886627124493108[7] = 0;
   out_4979886627124493108[8] = 0;
   out_4979886627124493108[9] = 0;
   out_4979886627124493108[10] = 1;
   out_4979886627124493108[11] = 0;
   out_4979886627124493108[12] = 0;
   out_4979886627124493108[13] = 1;
   out_4979886627124493108[14] = 0;
   out_4979886627124493108[15] = 0;
   out_4979886627124493108[16] = 0;
   out_4979886627124493108[17] = 0;
   out_4979886627124493108[18] = 0;
   out_4979886627124493108[19] = 0;
   out_4979886627124493108[20] = 0;
   out_4979886627124493108[21] = 0;
   out_4979886627124493108[22] = 0;
   out_4979886627124493108[23] = 0;
   out_4979886627124493108[24] = 0;
   out_4979886627124493108[25] = 0;
   out_4979886627124493108[26] = 0;
   out_4979886627124493108[27] = 0;
   out_4979886627124493108[28] = 0;
   out_4979886627124493108[29] = 0;
   out_4979886627124493108[30] = 0;
   out_4979886627124493108[31] = 0;
   out_4979886627124493108[32] = 0;
   out_4979886627124493108[33] = 1;
   out_4979886627124493108[34] = 0;
   out_4979886627124493108[35] = 0;
   out_4979886627124493108[36] = 1;
   out_4979886627124493108[37] = 0;
   out_4979886627124493108[38] = 0;
   out_4979886627124493108[39] = 0;
   out_4979886627124493108[40] = 0;
   out_4979886627124493108[41] = 0;
   out_4979886627124493108[42] = 0;
   out_4979886627124493108[43] = 0;
   out_4979886627124493108[44] = 0;
   out_4979886627124493108[45] = 0;
   out_4979886627124493108[46] = 0;
   out_4979886627124493108[47] = 0;
   out_4979886627124493108[48] = 0;
   out_4979886627124493108[49] = 0;
   out_4979886627124493108[50] = 0;
   out_4979886627124493108[51] = 0;
   out_4979886627124493108[52] = 0;
   out_4979886627124493108[53] = 0;
   out_4979886627124493108[54] = 0;
   out_4979886627124493108[55] = 0;
   out_4979886627124493108[56] = 1;
   out_4979886627124493108[57] = 0;
   out_4979886627124493108[58] = 0;
   out_4979886627124493108[59] = 1;
   out_4979886627124493108[60] = 0;
   out_4979886627124493108[61] = 0;
   out_4979886627124493108[62] = 0;
   out_4979886627124493108[63] = 0;
   out_4979886627124493108[64] = 0;
   out_4979886627124493108[65] = 0;
}
void h_9(double *state, double *unused, double *out_3856253699158019501) {
   out_3856253699158019501[0] = state[10];
   out_3856253699158019501[1] = state[11];
   out_3856253699158019501[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5221076273754083753) {
   out_5221076273754083753[0] = 0;
   out_5221076273754083753[1] = 0;
   out_5221076273754083753[2] = 0;
   out_5221076273754083753[3] = 0;
   out_5221076273754083753[4] = 0;
   out_5221076273754083753[5] = 0;
   out_5221076273754083753[6] = 0;
   out_5221076273754083753[7] = 0;
   out_5221076273754083753[8] = 0;
   out_5221076273754083753[9] = 0;
   out_5221076273754083753[10] = 1;
   out_5221076273754083753[11] = 0;
   out_5221076273754083753[12] = 0;
   out_5221076273754083753[13] = 0;
   out_5221076273754083753[14] = 0;
   out_5221076273754083753[15] = 0;
   out_5221076273754083753[16] = 0;
   out_5221076273754083753[17] = 0;
   out_5221076273754083753[18] = 0;
   out_5221076273754083753[19] = 0;
   out_5221076273754083753[20] = 0;
   out_5221076273754083753[21] = 0;
   out_5221076273754083753[22] = 0;
   out_5221076273754083753[23] = 0;
   out_5221076273754083753[24] = 0;
   out_5221076273754083753[25] = 0;
   out_5221076273754083753[26] = 0;
   out_5221076273754083753[27] = 0;
   out_5221076273754083753[28] = 0;
   out_5221076273754083753[29] = 0;
   out_5221076273754083753[30] = 0;
   out_5221076273754083753[31] = 0;
   out_5221076273754083753[32] = 0;
   out_5221076273754083753[33] = 1;
   out_5221076273754083753[34] = 0;
   out_5221076273754083753[35] = 0;
   out_5221076273754083753[36] = 0;
   out_5221076273754083753[37] = 0;
   out_5221076273754083753[38] = 0;
   out_5221076273754083753[39] = 0;
   out_5221076273754083753[40] = 0;
   out_5221076273754083753[41] = 0;
   out_5221076273754083753[42] = 0;
   out_5221076273754083753[43] = 0;
   out_5221076273754083753[44] = 0;
   out_5221076273754083753[45] = 0;
   out_5221076273754083753[46] = 0;
   out_5221076273754083753[47] = 0;
   out_5221076273754083753[48] = 0;
   out_5221076273754083753[49] = 0;
   out_5221076273754083753[50] = 0;
   out_5221076273754083753[51] = 0;
   out_5221076273754083753[52] = 0;
   out_5221076273754083753[53] = 0;
   out_5221076273754083753[54] = 0;
   out_5221076273754083753[55] = 0;
   out_5221076273754083753[56] = 1;
   out_5221076273754083753[57] = 0;
   out_5221076273754083753[58] = 0;
   out_5221076273754083753[59] = 0;
   out_5221076273754083753[60] = 0;
   out_5221076273754083753[61] = 0;
   out_5221076273754083753[62] = 0;
   out_5221076273754083753[63] = 0;
   out_5221076273754083753[64] = 0;
   out_5221076273754083753[65] = 0;
}
void h_10(double *state, double *unused, double *out_8315774334350174408) {
   out_8315774334350174408[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8315774334350174408[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8315774334350174408[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3413394562179663325) {
   out_3413394562179663325[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3413394562179663325[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3413394562179663325[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3413394562179663325[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3413394562179663325[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3413394562179663325[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3413394562179663325[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3413394562179663325[7] = 0;
   out_3413394562179663325[8] = 0;
   out_3413394562179663325[9] = 0;
   out_3413394562179663325[10] = 0;
   out_3413394562179663325[11] = 0;
   out_3413394562179663325[12] = 0;
   out_3413394562179663325[13] = 0;
   out_3413394562179663325[14] = 0;
   out_3413394562179663325[15] = 0;
   out_3413394562179663325[16] = 1;
   out_3413394562179663325[17] = 0;
   out_3413394562179663325[18] = 0;
   out_3413394562179663325[19] = 1;
   out_3413394562179663325[20] = 0;
   out_3413394562179663325[21] = 0;
   out_3413394562179663325[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3413394562179663325[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3413394562179663325[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3413394562179663325[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3413394562179663325[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3413394562179663325[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3413394562179663325[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3413394562179663325[29] = 0;
   out_3413394562179663325[30] = 0;
   out_3413394562179663325[31] = 0;
   out_3413394562179663325[32] = 0;
   out_3413394562179663325[33] = 0;
   out_3413394562179663325[34] = 0;
   out_3413394562179663325[35] = 0;
   out_3413394562179663325[36] = 0;
   out_3413394562179663325[37] = 0;
   out_3413394562179663325[38] = 0;
   out_3413394562179663325[39] = 1;
   out_3413394562179663325[40] = 0;
   out_3413394562179663325[41] = 0;
   out_3413394562179663325[42] = 1;
   out_3413394562179663325[43] = 0;
   out_3413394562179663325[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3413394562179663325[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3413394562179663325[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3413394562179663325[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3413394562179663325[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3413394562179663325[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3413394562179663325[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3413394562179663325[51] = 0;
   out_3413394562179663325[52] = 0;
   out_3413394562179663325[53] = 0;
   out_3413394562179663325[54] = 0;
   out_3413394562179663325[55] = 0;
   out_3413394562179663325[56] = 0;
   out_3413394562179663325[57] = 0;
   out_3413394562179663325[58] = 0;
   out_3413394562179663325[59] = 0;
   out_3413394562179663325[60] = 0;
   out_3413394562179663325[61] = 0;
   out_3413394562179663325[62] = 1;
   out_3413394562179663325[63] = 0;
   out_3413394562179663325[64] = 0;
   out_3413394562179663325[65] = 1;
}
void h_12(double *state, double *unused, double *out_7313259081701872739) {
   out_7313259081701872739[0] = state[0];
   out_7313259081701872739[1] = state[1];
   out_7313259081701872739[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8447401038553096713) {
   out_8447401038553096713[0] = 1;
   out_8447401038553096713[1] = 0;
   out_8447401038553096713[2] = 0;
   out_8447401038553096713[3] = 0;
   out_8447401038553096713[4] = 0;
   out_8447401038553096713[5] = 0;
   out_8447401038553096713[6] = 0;
   out_8447401038553096713[7] = 0;
   out_8447401038553096713[8] = 0;
   out_8447401038553096713[9] = 0;
   out_8447401038553096713[10] = 0;
   out_8447401038553096713[11] = 0;
   out_8447401038553096713[12] = 0;
   out_8447401038553096713[13] = 0;
   out_8447401038553096713[14] = 0;
   out_8447401038553096713[15] = 0;
   out_8447401038553096713[16] = 0;
   out_8447401038553096713[17] = 0;
   out_8447401038553096713[18] = 0;
   out_8447401038553096713[19] = 0;
   out_8447401038553096713[20] = 0;
   out_8447401038553096713[21] = 0;
   out_8447401038553096713[22] = 0;
   out_8447401038553096713[23] = 1;
   out_8447401038553096713[24] = 0;
   out_8447401038553096713[25] = 0;
   out_8447401038553096713[26] = 0;
   out_8447401038553096713[27] = 0;
   out_8447401038553096713[28] = 0;
   out_8447401038553096713[29] = 0;
   out_8447401038553096713[30] = 0;
   out_8447401038553096713[31] = 0;
   out_8447401038553096713[32] = 0;
   out_8447401038553096713[33] = 0;
   out_8447401038553096713[34] = 0;
   out_8447401038553096713[35] = 0;
   out_8447401038553096713[36] = 0;
   out_8447401038553096713[37] = 0;
   out_8447401038553096713[38] = 0;
   out_8447401038553096713[39] = 0;
   out_8447401038553096713[40] = 0;
   out_8447401038553096713[41] = 0;
   out_8447401038553096713[42] = 0;
   out_8447401038553096713[43] = 0;
   out_8447401038553096713[44] = 0;
   out_8447401038553096713[45] = 0;
   out_8447401038553096713[46] = 1;
   out_8447401038553096713[47] = 0;
   out_8447401038553096713[48] = 0;
   out_8447401038553096713[49] = 0;
   out_8447401038553096713[50] = 0;
   out_8447401038553096713[51] = 0;
   out_8447401038553096713[52] = 0;
   out_8447401038553096713[53] = 0;
   out_8447401038553096713[54] = 0;
   out_8447401038553096713[55] = 0;
   out_8447401038553096713[56] = 0;
   out_8447401038553096713[57] = 0;
   out_8447401038553096713[58] = 0;
   out_8447401038553096713[59] = 0;
   out_8447401038553096713[60] = 0;
   out_8447401038553096713[61] = 0;
   out_8447401038553096713[62] = 0;
   out_8447401038553096713[63] = 0;
   out_8447401038553096713[64] = 0;
   out_8447401038553096713[65] = 0;
}
void h_31(double *state, double *unused, double *out_140212771163044236) {
   out_140212771163044236[0] = state[7];
   out_140212771163044236[1] = state[8];
   out_140212771163044236[2] = state[9];
}
void H_31(double *state, double *unused, double *out_8346548684497100484) {
   out_8346548684497100484[0] = 0;
   out_8346548684497100484[1] = 0;
   out_8346548684497100484[2] = 0;
   out_8346548684497100484[3] = 0;
   out_8346548684497100484[4] = 0;
   out_8346548684497100484[5] = 0;
   out_8346548684497100484[6] = 0;
   out_8346548684497100484[7] = 1;
   out_8346548684497100484[8] = 0;
   out_8346548684497100484[9] = 0;
   out_8346548684497100484[10] = 0;
   out_8346548684497100484[11] = 0;
   out_8346548684497100484[12] = 0;
   out_8346548684497100484[13] = 0;
   out_8346548684497100484[14] = 0;
   out_8346548684497100484[15] = 0;
   out_8346548684497100484[16] = 0;
   out_8346548684497100484[17] = 0;
   out_8346548684497100484[18] = 0;
   out_8346548684497100484[19] = 0;
   out_8346548684497100484[20] = 0;
   out_8346548684497100484[21] = 0;
   out_8346548684497100484[22] = 0;
   out_8346548684497100484[23] = 0;
   out_8346548684497100484[24] = 0;
   out_8346548684497100484[25] = 0;
   out_8346548684497100484[26] = 0;
   out_8346548684497100484[27] = 0;
   out_8346548684497100484[28] = 0;
   out_8346548684497100484[29] = 0;
   out_8346548684497100484[30] = 1;
   out_8346548684497100484[31] = 0;
   out_8346548684497100484[32] = 0;
   out_8346548684497100484[33] = 0;
   out_8346548684497100484[34] = 0;
   out_8346548684497100484[35] = 0;
   out_8346548684497100484[36] = 0;
   out_8346548684497100484[37] = 0;
   out_8346548684497100484[38] = 0;
   out_8346548684497100484[39] = 0;
   out_8346548684497100484[40] = 0;
   out_8346548684497100484[41] = 0;
   out_8346548684497100484[42] = 0;
   out_8346548684497100484[43] = 0;
   out_8346548684497100484[44] = 0;
   out_8346548684497100484[45] = 0;
   out_8346548684497100484[46] = 0;
   out_8346548684497100484[47] = 0;
   out_8346548684497100484[48] = 0;
   out_8346548684497100484[49] = 0;
   out_8346548684497100484[50] = 0;
   out_8346548684497100484[51] = 0;
   out_8346548684497100484[52] = 0;
   out_8346548684497100484[53] = 1;
   out_8346548684497100484[54] = 0;
   out_8346548684497100484[55] = 0;
   out_8346548684497100484[56] = 0;
   out_8346548684497100484[57] = 0;
   out_8346548684497100484[58] = 0;
   out_8346548684497100484[59] = 0;
   out_8346548684497100484[60] = 0;
   out_8346548684497100484[61] = 0;
   out_8346548684497100484[62] = 0;
   out_8346548684497100484[63] = 0;
   out_8346548684497100484[64] = 0;
   out_8346548684497100484[65] = 0;
}
void h_32(double *state, double *unused, double *out_7302549768249459087) {
   out_7302549768249459087[0] = state[3];
   out_7302549768249459087[1] = state[4];
   out_7302549768249459087[2] = state[5];
   out_7302549768249459087[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4005543908763993596) {
   out_4005543908763993596[0] = 0;
   out_4005543908763993596[1] = 0;
   out_4005543908763993596[2] = 0;
   out_4005543908763993596[3] = 1;
   out_4005543908763993596[4] = 0;
   out_4005543908763993596[5] = 0;
   out_4005543908763993596[6] = 0;
   out_4005543908763993596[7] = 0;
   out_4005543908763993596[8] = 0;
   out_4005543908763993596[9] = 0;
   out_4005543908763993596[10] = 0;
   out_4005543908763993596[11] = 0;
   out_4005543908763993596[12] = 0;
   out_4005543908763993596[13] = 0;
   out_4005543908763993596[14] = 0;
   out_4005543908763993596[15] = 0;
   out_4005543908763993596[16] = 0;
   out_4005543908763993596[17] = 0;
   out_4005543908763993596[18] = 0;
   out_4005543908763993596[19] = 0;
   out_4005543908763993596[20] = 0;
   out_4005543908763993596[21] = 0;
   out_4005543908763993596[22] = 0;
   out_4005543908763993596[23] = 0;
   out_4005543908763993596[24] = 0;
   out_4005543908763993596[25] = 0;
   out_4005543908763993596[26] = 1;
   out_4005543908763993596[27] = 0;
   out_4005543908763993596[28] = 0;
   out_4005543908763993596[29] = 0;
   out_4005543908763993596[30] = 0;
   out_4005543908763993596[31] = 0;
   out_4005543908763993596[32] = 0;
   out_4005543908763993596[33] = 0;
   out_4005543908763993596[34] = 0;
   out_4005543908763993596[35] = 0;
   out_4005543908763993596[36] = 0;
   out_4005543908763993596[37] = 0;
   out_4005543908763993596[38] = 0;
   out_4005543908763993596[39] = 0;
   out_4005543908763993596[40] = 0;
   out_4005543908763993596[41] = 0;
   out_4005543908763993596[42] = 0;
   out_4005543908763993596[43] = 0;
   out_4005543908763993596[44] = 0;
   out_4005543908763993596[45] = 0;
   out_4005543908763993596[46] = 0;
   out_4005543908763993596[47] = 0;
   out_4005543908763993596[48] = 0;
   out_4005543908763993596[49] = 1;
   out_4005543908763993596[50] = 0;
   out_4005543908763993596[51] = 0;
   out_4005543908763993596[52] = 0;
   out_4005543908763993596[53] = 0;
   out_4005543908763993596[54] = 0;
   out_4005543908763993596[55] = 0;
   out_4005543908763993596[56] = 0;
   out_4005543908763993596[57] = 0;
   out_4005543908763993596[58] = 0;
   out_4005543908763993596[59] = 0;
   out_4005543908763993596[60] = 0;
   out_4005543908763993596[61] = 0;
   out_4005543908763993596[62] = 0;
   out_4005543908763993596[63] = 0;
   out_4005543908763993596[64] = 0;
   out_4005543908763993596[65] = 0;
   out_4005543908763993596[66] = 0;
   out_4005543908763993596[67] = 0;
   out_4005543908763993596[68] = 0;
   out_4005543908763993596[69] = 0;
   out_4005543908763993596[70] = 0;
   out_4005543908763993596[71] = 0;
   out_4005543908763993596[72] = 1;
   out_4005543908763993596[73] = 0;
   out_4005543908763993596[74] = 0;
   out_4005543908763993596[75] = 0;
   out_4005543908763993596[76] = 0;
   out_4005543908763993596[77] = 0;
   out_4005543908763993596[78] = 0;
   out_4005543908763993596[79] = 0;
   out_4005543908763993596[80] = 0;
   out_4005543908763993596[81] = 0;
   out_4005543908763993596[82] = 0;
   out_4005543908763993596[83] = 0;
   out_4005543908763993596[84] = 0;
   out_4005543908763993596[85] = 0;
   out_4005543908763993596[86] = 0;
   out_4005543908763993596[87] = 0;
}
void h_13(double *state, double *unused, double *out_6683782575543378369) {
   out_6683782575543378369[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6683782575543378369[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6683782575543378369[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5186093271929199825) {
   out_5186093271929199825[0] = 0;
   out_5186093271929199825[1] = 0;
   out_5186093271929199825[2] = 0;
   out_5186093271929199825[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5186093271929199825[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5186093271929199825[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5186093271929199825[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5186093271929199825[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5186093271929199825[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5186093271929199825[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5186093271929199825[10] = 0;
   out_5186093271929199825[11] = 0;
   out_5186093271929199825[12] = 0;
   out_5186093271929199825[13] = 0;
   out_5186093271929199825[14] = 0;
   out_5186093271929199825[15] = 0;
   out_5186093271929199825[16] = 0;
   out_5186093271929199825[17] = 0;
   out_5186093271929199825[18] = 0;
   out_5186093271929199825[19] = 0;
   out_5186093271929199825[20] = 0;
   out_5186093271929199825[21] = 0;
   out_5186093271929199825[22] = 0;
   out_5186093271929199825[23] = 0;
   out_5186093271929199825[24] = 0;
   out_5186093271929199825[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5186093271929199825[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5186093271929199825[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5186093271929199825[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5186093271929199825[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5186093271929199825[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5186093271929199825[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5186093271929199825[32] = 0;
   out_5186093271929199825[33] = 0;
   out_5186093271929199825[34] = 0;
   out_5186093271929199825[35] = 0;
   out_5186093271929199825[36] = 0;
   out_5186093271929199825[37] = 0;
   out_5186093271929199825[38] = 0;
   out_5186093271929199825[39] = 0;
   out_5186093271929199825[40] = 0;
   out_5186093271929199825[41] = 0;
   out_5186093271929199825[42] = 0;
   out_5186093271929199825[43] = 0;
   out_5186093271929199825[44] = 0;
   out_5186093271929199825[45] = 0;
   out_5186093271929199825[46] = 0;
   out_5186093271929199825[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5186093271929199825[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5186093271929199825[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5186093271929199825[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5186093271929199825[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5186093271929199825[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5186093271929199825[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5186093271929199825[54] = 0;
   out_5186093271929199825[55] = 0;
   out_5186093271929199825[56] = 0;
   out_5186093271929199825[57] = 0;
   out_5186093271929199825[58] = 0;
   out_5186093271929199825[59] = 0;
   out_5186093271929199825[60] = 0;
   out_5186093271929199825[61] = 0;
   out_5186093271929199825[62] = 0;
   out_5186093271929199825[63] = 0;
   out_5186093271929199825[64] = 0;
   out_5186093271929199825[65] = 0;
}
void h_14(double *state, double *unused, double *out_3856253699158019501) {
   out_3856253699158019501[0] = state[10];
   out_3856253699158019501[1] = state[11];
   out_3856253699158019501[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5221076273754083753) {
   out_5221076273754083753[0] = 0;
   out_5221076273754083753[1] = 0;
   out_5221076273754083753[2] = 0;
   out_5221076273754083753[3] = 0;
   out_5221076273754083753[4] = 0;
   out_5221076273754083753[5] = 0;
   out_5221076273754083753[6] = 0;
   out_5221076273754083753[7] = 0;
   out_5221076273754083753[8] = 0;
   out_5221076273754083753[9] = 0;
   out_5221076273754083753[10] = 1;
   out_5221076273754083753[11] = 0;
   out_5221076273754083753[12] = 0;
   out_5221076273754083753[13] = 0;
   out_5221076273754083753[14] = 0;
   out_5221076273754083753[15] = 0;
   out_5221076273754083753[16] = 0;
   out_5221076273754083753[17] = 0;
   out_5221076273754083753[18] = 0;
   out_5221076273754083753[19] = 0;
   out_5221076273754083753[20] = 0;
   out_5221076273754083753[21] = 0;
   out_5221076273754083753[22] = 0;
   out_5221076273754083753[23] = 0;
   out_5221076273754083753[24] = 0;
   out_5221076273754083753[25] = 0;
   out_5221076273754083753[26] = 0;
   out_5221076273754083753[27] = 0;
   out_5221076273754083753[28] = 0;
   out_5221076273754083753[29] = 0;
   out_5221076273754083753[30] = 0;
   out_5221076273754083753[31] = 0;
   out_5221076273754083753[32] = 0;
   out_5221076273754083753[33] = 1;
   out_5221076273754083753[34] = 0;
   out_5221076273754083753[35] = 0;
   out_5221076273754083753[36] = 0;
   out_5221076273754083753[37] = 0;
   out_5221076273754083753[38] = 0;
   out_5221076273754083753[39] = 0;
   out_5221076273754083753[40] = 0;
   out_5221076273754083753[41] = 0;
   out_5221076273754083753[42] = 0;
   out_5221076273754083753[43] = 0;
   out_5221076273754083753[44] = 0;
   out_5221076273754083753[45] = 0;
   out_5221076273754083753[46] = 0;
   out_5221076273754083753[47] = 0;
   out_5221076273754083753[48] = 0;
   out_5221076273754083753[49] = 0;
   out_5221076273754083753[50] = 0;
   out_5221076273754083753[51] = 0;
   out_5221076273754083753[52] = 0;
   out_5221076273754083753[53] = 0;
   out_5221076273754083753[54] = 0;
   out_5221076273754083753[55] = 0;
   out_5221076273754083753[56] = 1;
   out_5221076273754083753[57] = 0;
   out_5221076273754083753[58] = 0;
   out_5221076273754083753[59] = 0;
   out_5221076273754083753[60] = 0;
   out_5221076273754083753[61] = 0;
   out_5221076273754083753[62] = 0;
   out_5221076273754083753[63] = 0;
   out_5221076273754083753[64] = 0;
   out_5221076273754083753[65] = 0;
}
void h_33(double *state, double *unused, double *out_5701278751367177618) {
   out_5701278751367177618[0] = state[16];
   out_5701278751367177618[1] = state[17];
   out_5701278751367177618[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6949638384573593528) {
   out_6949638384573593528[0] = 0;
   out_6949638384573593528[1] = 0;
   out_6949638384573593528[2] = 0;
   out_6949638384573593528[3] = 0;
   out_6949638384573593528[4] = 0;
   out_6949638384573593528[5] = 0;
   out_6949638384573593528[6] = 0;
   out_6949638384573593528[7] = 0;
   out_6949638384573593528[8] = 0;
   out_6949638384573593528[9] = 0;
   out_6949638384573593528[10] = 0;
   out_6949638384573593528[11] = 0;
   out_6949638384573593528[12] = 0;
   out_6949638384573593528[13] = 0;
   out_6949638384573593528[14] = 0;
   out_6949638384573593528[15] = 0;
   out_6949638384573593528[16] = 1;
   out_6949638384573593528[17] = 0;
   out_6949638384573593528[18] = 0;
   out_6949638384573593528[19] = 0;
   out_6949638384573593528[20] = 0;
   out_6949638384573593528[21] = 0;
   out_6949638384573593528[22] = 0;
   out_6949638384573593528[23] = 0;
   out_6949638384573593528[24] = 0;
   out_6949638384573593528[25] = 0;
   out_6949638384573593528[26] = 0;
   out_6949638384573593528[27] = 0;
   out_6949638384573593528[28] = 0;
   out_6949638384573593528[29] = 0;
   out_6949638384573593528[30] = 0;
   out_6949638384573593528[31] = 0;
   out_6949638384573593528[32] = 0;
   out_6949638384573593528[33] = 0;
   out_6949638384573593528[34] = 0;
   out_6949638384573593528[35] = 0;
   out_6949638384573593528[36] = 0;
   out_6949638384573593528[37] = 0;
   out_6949638384573593528[38] = 0;
   out_6949638384573593528[39] = 1;
   out_6949638384573593528[40] = 0;
   out_6949638384573593528[41] = 0;
   out_6949638384573593528[42] = 0;
   out_6949638384573593528[43] = 0;
   out_6949638384573593528[44] = 0;
   out_6949638384573593528[45] = 0;
   out_6949638384573593528[46] = 0;
   out_6949638384573593528[47] = 0;
   out_6949638384573593528[48] = 0;
   out_6949638384573593528[49] = 0;
   out_6949638384573593528[50] = 0;
   out_6949638384573593528[51] = 0;
   out_6949638384573593528[52] = 0;
   out_6949638384573593528[53] = 0;
   out_6949638384573593528[54] = 0;
   out_6949638384573593528[55] = 0;
   out_6949638384573593528[56] = 0;
   out_6949638384573593528[57] = 0;
   out_6949638384573593528[58] = 0;
   out_6949638384573593528[59] = 0;
   out_6949638384573593528[60] = 0;
   out_6949638384573593528[61] = 0;
   out_6949638384573593528[62] = 1;
   out_6949638384573593528[63] = 0;
   out_6949638384573593528[64] = 0;
   out_6949638384573593528[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_453938190038079243) {
  H(in_vec, out_453938190038079243);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2158047252761075543) {
  err_fun(nom_x, delta_x, out_2158047252761075543);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8734297616248117664) {
  inv_err_fun(nom_x, true_x, out_8734297616248117664);
}
void live_H_mod_fun(double *state, double *out_2860066609604479351) {
  H_mod_fun(state, out_2860066609604479351);
}
void live_f_fun(double *state, double dt, double *out_5602464115310423705) {
  f_fun(state,  dt, out_5602464115310423705);
}
void live_F_fun(double *state, double dt, double *out_6916573737423352276) {
  F_fun(state,  dt, out_6916573737423352276);
}
void live_h_4(double *state, double *unused, double *out_596332248622237516) {
  h_4(state, unused, out_596332248622237516);
}
void live_H_4(double *state, double *unused, double *out_4979886627124493108) {
  H_4(state, unused, out_4979886627124493108);
}
void live_h_9(double *state, double *unused, double *out_3856253699158019501) {
  h_9(state, unused, out_3856253699158019501);
}
void live_H_9(double *state, double *unused, double *out_5221076273754083753) {
  H_9(state, unused, out_5221076273754083753);
}
void live_h_10(double *state, double *unused, double *out_8315774334350174408) {
  h_10(state, unused, out_8315774334350174408);
}
void live_H_10(double *state, double *unused, double *out_3413394562179663325) {
  H_10(state, unused, out_3413394562179663325);
}
void live_h_12(double *state, double *unused, double *out_7313259081701872739) {
  h_12(state, unused, out_7313259081701872739);
}
void live_H_12(double *state, double *unused, double *out_8447401038553096713) {
  H_12(state, unused, out_8447401038553096713);
}
void live_h_31(double *state, double *unused, double *out_140212771163044236) {
  h_31(state, unused, out_140212771163044236);
}
void live_H_31(double *state, double *unused, double *out_8346548684497100484) {
  H_31(state, unused, out_8346548684497100484);
}
void live_h_32(double *state, double *unused, double *out_7302549768249459087) {
  h_32(state, unused, out_7302549768249459087);
}
void live_H_32(double *state, double *unused, double *out_4005543908763993596) {
  H_32(state, unused, out_4005543908763993596);
}
void live_h_13(double *state, double *unused, double *out_6683782575543378369) {
  h_13(state, unused, out_6683782575543378369);
}
void live_H_13(double *state, double *unused, double *out_5186093271929199825) {
  H_13(state, unused, out_5186093271929199825);
}
void live_h_14(double *state, double *unused, double *out_3856253699158019501) {
  h_14(state, unused, out_3856253699158019501);
}
void live_H_14(double *state, double *unused, double *out_5221076273754083753) {
  H_14(state, unused, out_5221076273754083753);
}
void live_h_33(double *state, double *unused, double *out_5701278751367177618) {
  h_33(state, unused, out_5701278751367177618);
}
void live_H_33(double *state, double *unused, double *out_6949638384573593528) {
  H_33(state, unused, out_6949638384573593528);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
